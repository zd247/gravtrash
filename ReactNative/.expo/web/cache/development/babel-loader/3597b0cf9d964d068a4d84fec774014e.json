{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/components/ErrorBoundary.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ErrorBoundary = function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      logErrorToMyService(error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 6\n          }\n        }, \"Something went wrong.\"), \";\");\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport { ErrorBoundary as default };","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/components/ErrorBoundary.js"],"names":["React","ErrorBoundary","props","state","hasError","error","errorInfo","logErrorToMyService","children","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;IAGqBC,a;;;;;AACpB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFkB;AAGlB;;;;sCAOiBC,K,EAAOC,S,EAAW;AAEnCC,MAAAA,mBAAmB,CAACF,KAAD,EAAQC,SAAR,CAAnB;AACA;;;6BAEQ;AACR,UAAI,KAAKH,KAAL,CAAWC,QAAf,EAAyB;AAExB,eACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,MADD;AAKA;;AAED,aAAO,KAAKF,KAAL,CAAWM,QAAlB;AACA;;;6CArB+BH,K,EAAO;AAEtC,aAAO;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACA;;;;EATyCJ,KAAK,CAACS,S;;SAA5BR,a","sourcesContent":["import React from 'react'\nimport { Text, View } from 'react-native'\n\nexport default class ErrorBoundary extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { hasError: false }\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true }\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\tlogErrorToMyService(error, errorInfo)\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn (\n\t\t\t\t<View>\n\t\t\t\t\t<Text>Something went wrong.</Text>;\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\n\t\treturn this.props.children\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}