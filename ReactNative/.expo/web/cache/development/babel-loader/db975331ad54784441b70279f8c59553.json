{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport colors from \"../assets/colors\";\nimport { connect } from 'react-redux';\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      })) : null, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \"Login with us!\")), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Phone number\"), React.createElement(View, {\n        style: styles.action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"user-o\",\n        color: Colors.bgUserLogin,\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }))))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgUserLogin\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30\n  },\n  logo: {\n    width: 40,\n    height: 40\n  },\n  textHeader: {\n    color: 'white',\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  textFooter: {\n    color: colors.bgUserLogin,\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","FontAwesome","colors","connect","ErrorBoundary","firebase","Colors","LoginScreen","state","isLoading","flex","backgroundColor","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","styles","container","header","textHeader","footer","textFooter","action","bgUserLogin","mapDispatchToProps","dispatch","signIn","user","type","payload","signOut","create","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","logo","width","height","color","fontSize","fontWeight","flexDirection","marginTop","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tActivityIndicator,\n  ScrollView,\n  Image,\n} from 'react-native'\nimport FontAwesome from 'react-native-vector-icons/FontAwesome'\n\nimport colors from '../assets/colors'\n\nimport { connect } from 'react-redux'\nimport ErrorBoundary from '../components/ErrorBoundary'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport { Colors } from 'react-native/Libraries/NewAppScreen'\n\nclass LoginScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t}\n\t}\n  \n\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary>\n\t\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t\t{/* ----------[loading indicator]----------*/}\n\t\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t\t</View>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/* ----------[[login screen]---------- */}\n\t\t\t\t\t{/* <View style={{ flex: 1 }}>\n\t\t\t\t\t\t<ScrollView style={{ flex: 1 }}> */}\n\t\t\t\t\t\t\t<View style={styles.container}>\n\t\t\t\t\t\t\t\t<View style={styles.header}>\n                  <Text style={styles.textHeader}>Login with us!</Text>\n                </View>\n\t\t\t\t\t\t\t\t<View style={styles.footer}>\n                  <Text style= {styles.textFooter}>Phone number</Text>\n                  <View style= {styles.action}>\n                    <FontAwesome name='user-o' color = {Colors.bgUserLogin} size={20} />\n                  </View>\n                </View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t{/* </ScrollView>\n\t\t\t\t\t</View> */}\n\t\t\t\t</View>\n\t\t\t</ErrorBoundary>\n\t\t)\n\t}\n}\n\n// redux\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\n// navigation\nexport default connect(null, mapDispatchToProps)(LoginScreen) \n\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: colors.bgUserLogin,\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50,\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30,\n  },\n  logo: {\n    width: 40,\n    height: 40,\n  },\n  textHeader: {\n    color: 'white',\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  textFooter: {\n    color: colors.bgUserLogin,\n    fontSize: 18,\n\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5,\n  },\n\n})\n"]},"metadata":{},"sourceType":"module"}