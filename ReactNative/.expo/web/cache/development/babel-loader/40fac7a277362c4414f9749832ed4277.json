{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TrashGrav from \"./TrashGrav\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUpScreen from \"./screens/SignUpScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport AdminHomeScreen from \"./screens/Admin/AdminHomeScreen\";\nimport CustomerCart from \"./screens/Customer/CustomerCart\";\nimport SettingScreen from \"./screens/SettingScreen\";\nimport SecurityCheck from \"./screens/AppSwitchNavigator/SecurityCheck\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport CustomDrawerNavigator from \"./screens/DrawerNavigator/CustomDrawerNavigator\";\nimport CartContainer from \"./redux/containers/CartContainer\";\nimport { createAppContainer, createSwitchNavigator, createStackNavigator, createDrawerNavigator, createBottomTabNavigator } from \"react-navigation\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport colors from \"./assets/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport * as firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./config/config\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.initializeFirebase = function () {\n      firebase.initializeApp(firebaseConfig);\n    };\n\n    _this.initializeFirebase();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, React.createElement(TrashGrav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar LoginStackNavigator = createStackNavigator({\n  LoginScreen: {\n    screen: LoginScreen,\n    navigationOptions: {\n      header: null\n    }\n  },\n  SignUpScreen: {\n    screen: SignUpScreen,\n    navigationOptions: {\n      header: null\n    }\n  }\n}, {\n  mode: \"modal\",\n  defaultNavigationOptions: {\n    headerStyle: {\n      backgroundColor: colors.bgMain\n    }\n  }\n});\nvar HomeTabNavigator = createBottomTabNavigator({\n  HomeScreen: {\n    screen: HomeScreen,\n    navigationOptions: {\n      tabBarLabel: \"Recycle Item List\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(CartContainer, {\n          color: tintColor,\n          type: \"recycleItemList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  CustomerCartScreen: {\n    screen: CustomerCart,\n    navigationOptions: {\n      tabBarLabel: \"Customer Cart\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(CartContainer, {\n          color: tintColor,\n          type: \"recycleCart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }\n}, {\n  tabBarOptions: {\n    style: {\n      backgroundColor: colors.bgMain\n    },\n    activeTintColor: colors.logoColor,\n    inactiveTintColor: colors.bgTextInput\n  }\n});\n\nHomeTabNavigator.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  var routeName = navigation.state.routes[navigation.state.index].routeName;\n\n  switch (routeName) {\n    case \"HomeScreen\":\n      return {\n        headerTitle: \"Home Screen\"\n      };\n\n    case \"CustomerCartScreen\":\n      return {\n        headerTitle: \"Recycle Cart Screen\"\n      };\n\n    default:\n      return {\n        headerTitle: \"Home Screen\"\n      };\n  }\n};\n\nvar AppDrawerNavigator = createDrawerNavigator({\n  HomeTabNavigator: {\n    screen: HomeTabNavigator,\n    navigationOptions: {\n      title: \"Home Screen\",\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-home\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 27\n          }\n        });\n      }\n    }\n  },\n  UserProfileScreen: {\n    screen: UserProfileScreen,\n    navigationOptions: {\n      title: \"User Profile\",\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-person\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }\n        });\n      }\n    }\n  },\n  SettingsScreen: {\n    screen: SettingScreen,\n    navigationOptions: {\n      title: \"Settings\",\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-settings\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 27\n          }\n        });\n      }\n    }\n  }\n}, {\n  contentComponent: CustomDrawerNavigator\n});\nvar AppSwitchNavigator = createSwitchNavigator({\n  SecurityCheck: SecurityCheck,\n  LoginStackNavigator: LoginStackNavigator,\n  AppDrawerNavigator: AppDrawerNavigator\n});\nvar AppContainer = createAppContainer(AppSwitchNavigator);\nexport default App;","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/App.js"],"names":["React","TrashGrav","LoginScreen","SignUpScreen","HomeScreen","UserProfileScreen","AdminHomeScreen","CustomerCart","SettingScreen","SecurityCheck","LoadingScreen","CustomDrawerNavigator","CartContainer","createAppContainer","createSwitchNavigator","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","ActionSheetProvider","colors","Ionicons","Provider","store","firebase","firebaseConfig","apps","length","initializeApp","App","props","initializeFirebase","Component","LoginStackNavigator","screen","navigationOptions","header","mode","defaultNavigationOptions","headerStyle","backgroundColor","bgMain","HomeTabNavigator","tabBarLabel","tabBarIcon","tintColor","CustomerCartScreen","tabBarOptions","style","activeTintColor","logoColor","inactiveTintColor","bgTextInput","navigation","routeName","state","routes","index","headerTitle","AppDrawerNavigator","title","drawerIcon","SettingsScreen","contentComponent","AppSwitchNavigator","AppContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableOpacity,\n  TextInput,\n  FlatList,\n  Alert,\n} from \"react-native\";\n\nimport TrashGrav from \"./TrashGrav\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUpScreen from \"./screens/SignUpScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport AdminHomeScreen from \"./screens/Admin/AdminHomeScreen\";\nimport CustomerCart from \"./screens/Customer/CustomerCart\";\nimport SettingScreen from \"./screens/SettingScreen\";\nimport SecurityCheck from \"./screens/AppSwitchNavigator/SecurityCheck\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\n\nimport CustomDrawerNavigator from \"./screens/DrawerNavigator/CustomDrawerNavigator\";\nimport CartContainer from \"./redux/containers/CartContainer\";\n\nimport {\n  createAppContainer,\n  createSwitchNavigator,\n  createStackNavigator,\n  createDrawerNavigator,\n  createBottomTabNavigator,\n} from \"react-navigation\";\n\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport colors from \"./assets/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport * as firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./config/config\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initializeFirebase();\n  }\n  initializeFirebase = () => {\n    firebase.initializeApp(firebaseConfig);\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <TrashGrav />\n      </Provider>\n    );\n  }\n}\n\nconst LoginStackNavigator = createStackNavigator(\n  {\n    LoginScreen: {\n      screen: LoginScreen,\n      navigationOptions: {\n        header: null,\n      },\n    },\n    SignUpScreen: {\n      screen: SignUpScreen,\n      navigationOptions: {\n        header: null,\n      },\n    },\n  },\n  {\n    mode: \"modal\",\n    defaultNavigationOptions: {\n      headerStyle: {\n        backgroundColor: colors.bgMain,\n      },\n    },\n  }\n);\n\nconst HomeTabNavigator = createBottomTabNavigator(\n  {\n    HomeScreen: {\n      screen: HomeScreen,\n      navigationOptions: {\n        tabBarLabel: \"Recycle Item List\",\n        tabBarIcon: ({ tintColor }) => (\n          <CartContainer color={tintColor} type=\"recycleItemList\" />\n        ),\n      },\n    },\n    CustomerCartScreen: {\n      screen: CustomerCart,\n      navigationOptions: {\n        tabBarLabel: \"Customer Cart\",\n        tabBarIcon: ({ tintColor }) => (\n          <CartContainer color={tintColor} type=\"recycleCart\" />\n        ),\n      },\n    },\n  },\n  {\n    tabBarOptions: {\n      style: {\n        backgroundColor: colors.bgMain,\n      },\n      activeTintColor: colors.logoColor,\n      inactiveTintColor: colors.bgTextInput,\n    },\n  }\n);\n\nHomeTabNavigator.navigationOptions = ({ navigation }) => {\n  const { routeName } = navigation.state.routes[navigation.state.index];\n\n  switch (routeName) {\n    case \"HomeScreen\":\n      return {\n        headerTitle: \"Home Screen\",\n      };\n    case \"CustomerCartScreen\":\n      return {\n        headerTitle: \"Recycle Cart Screen\",\n      };\n    default:\n      return {\n        headerTitle: \"Home Screen\",\n      };\n  }\n};\n\nconst AppDrawerNavigator = createDrawerNavigator(\n  {\n    HomeTabNavigator: {\n      screen: HomeTabNavigator,\n      navigationOptions: {\n        title: \"Home Screen\",\n        drawerIcon: () => <Ionicons name=\"ios-home\" size={24} />,\n      },\n    },\n    UserProfileScreen: {\n      screen: UserProfileScreen,\n      navigationOptions: {\n        title: \"User Profile\",\n        drawerIcon: () => <Ionicons name=\"ios-person\" size={24} />,\n      },\n    },\n    SettingsScreen: {\n      screen: SettingScreen,\n      navigationOptions: {\n        title: \"Settings\",\n        drawerIcon: () => <Ionicons name=\"ios-settings\" size={24} />,\n      },\n    },\n  },\n  {\n    contentComponent: CustomDrawerNavigator,\n  }\n);\n\nconst AppSwitchNavigator = createSwitchNavigator({\n  SecurityCheck,\n  LoginStackNavigator,\n  AppDrawerNavigator,\n});\n\nconst AppContainer = createAppContainer(AppSwitchNavigator);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}