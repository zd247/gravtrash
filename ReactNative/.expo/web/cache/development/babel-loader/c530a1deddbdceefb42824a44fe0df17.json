{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport colors from \"../assets/colors\";\nimport { connect } from 'react-redux';\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }\n      })) : null, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }\n      }, \"Login with us!\")), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.textFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }\n      }, \"Phone number\"), React.createElement(View, {\n        style: styles.action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"user-o\",\n        color: colors.bgUserLogin,\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Ex: (012) 345-6789\",\n        style: styles.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }), React.createElement(Feather, {\n        name: \"check-circle\",\n        color: \"green\",\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 8\n        }\n      }, \"style=\", styles.button, React.createElement(LinearGradient, {\n        colors: ['#5db8fe', '#39cff2'],\n        style: styles.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }))))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgUserLogin\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30\n  },\n  logo: {\n    width: 40,\n    height: 40\n  },\n  textHeader: {\n    color: 'white',\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  textFooter: {\n    color: colors.bgUserLogin,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  textInput: {\n    flex: 1,\n    paddingLeft: 10,\n    color: colors.bgUserLogin\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","LinearGradient","FontAwesome","Feather","colors","connect","ErrorBoundary","firebase","LoginScreen","state","isLoading","flex","backgroundColor","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","styles","container","header","textHeader","footer","textFooter","action","bgUserLogin","textInput","button","signIn","mapDispatchToProps","dispatch","user","type","payload","signOut","create","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","logo","width","height","color","fontSize","fontWeight","flexDirection","marginTop","borderBottomWidth","borderBottomColor","paddingLeft","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tActivityIndicator,\n\tScrollView,\n\tImage,\n} from 'react-native'\nimport LinearGradient from 'react-native-linear-gradient'\n\nimport FontAwesome from 'react-native-vector-icons/FontAwesome'\nimport Feather from 'react-native-vector-icons/Feather'\n\nimport colors from '../assets/colors'\n\nimport { connect } from 'react-redux'\nimport ErrorBoundary from '../components/ErrorBoundary'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nclass LoginScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary>\n\t\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t\t{/* ----------[loading indicator]----------*/}\n\t\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t\t</View>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/* ----------[[screen]---------- */}\n\t\t\t\t\t{/* <View style={{ flex: 1 }}>\n\t\t\t\t\t\t<ScrollView style={{ flex: 1 }}> */}\n\t\t\t\t\t<View style={styles.container}>\n\t\t\t\t\t\t<View style={styles.header}>\n\t\t\t\t\t\t\t<Text style={styles.textHeader}>Login with us!</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<View style={styles.footer}>\n\t\t\t\t\t\t\t{/* inputs */}\n\t\t\t\t\t\t\t<Text style={styles.textFooter}>Phone number</Text>\n\t\t\t\t\t\t\t<View style={styles.action}>\n\t\t\t\t\t\t\t\t<FontAwesome\n\t\t\t\t\t\t\t\t\tname='user-o'\n\t\t\t\t\t\t\t\t\tcolor={colors.bgUserLogin}\n\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\tplaceholder='Ex: (012) 345-6789'\n\t\t\t\t\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Feather name='check-circle' color='green' size={20} />\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t{/* buttons */}\n\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\t<LinearGradient\n\t\t\t\t\t\t\t\t\tcolors={['#5db8fe', '#39cff2']}\n\t\t\t\t\t\t\t\t\tstyle={styles.signIn}>\n                    \n                  </LinearGradient>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t{/* </ScrollView>\n\t\t\t\t\t</View> */}\n\t\t\t\t</View>\n\t\t\t</ErrorBoundary>\n\t\t)\n\t}\n}\n\n// redux\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\n// navigation\nexport default connect(null, mapDispatchToProps)(LoginScreen)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: colors.bgUserLogin,\n\t},\n\theader: {\n\t\tflex: 1,\n\t\tjustifyContent: 'flex-end',\n\t\tpaddingHorizontal: 20,\n\t\tpaddingBottom: 50,\n\t},\n\tfooter: {\n\t\tflex: 3,\n\t\tbackgroundColor: 'white',\n\t\tborderTopLeftRadius: 30,\n\t\tborderTopRightRadius: 30,\n\t\tpaddingHorizontal: 20,\n\t\tpaddingVertical: 30,\n\t},\n\tlogo: {\n\t\twidth: 40,\n\t\theight: 40,\n\t},\n\ttextHeader: {\n\t\tcolor: 'white',\n\t\tfontSize: 30,\n\t\tfontWeight: 'bold',\n\t},\n\ttextFooter: {\n\t\tcolor: colors.bgUserLogin,\n\t\tfontSize: 18,\n\t\tfontWeight: 'bold',\n\t},\n\taction: {\n\t\tflexDirection: 'row',\n\t\tmarginTop: 10,\n\t\tborderBottomWidth: 1,\n\t\tborderBottomColor: '#f2f2f2',\n\t\tpaddingBottom: 5,\n\t},\n\ttextInput: {\n\t\tflex: 1,\n\t\tpaddingLeft: 10,\n\t\tcolor: colors.bgUserLogin,\n\t},\n\tbutton: {\n\t\talignItems: 'center',\n\t\tmarginTop: 50,\n\t},\n\tsignIn: {\n\t\twidth: '100%',\n\t\theight: 50,\n\t\tjustifyContent: 'center',\n\t\tborderRadius: 10,\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}