{"ast":null,"code":"import { createAnimatedOperator } from \"./core/AnimatedOperator\";\nvar operator = createAnimatedOperator;\nexport var add = operator('add');\nexport var sub = operator('sub');\nexport var multiply = operator('multiply');\nexport var divide = operator('divide');\nexport var pow = operator('pow');\nexport var modulo = operator('modulo');\nexport var sqrt = operator('sqrt');\nexport var sin = operator('sin');\nexport var cos = operator('cos');\nexport var exp = operator('exp');\nexport var round = operator('round');\nexport var lessThan = operator('lessThan');\nexport var eq = operator('eq');\nexport var greaterThan = operator('greaterThan');\nexport var lessOrEq = operator('lessOrEq');\nexport var greaterOrEq = operator('greaterOrEq');\nexport var neq = operator('neq');\nexport var and = operator('and');\nexport var or = operator('or');\nexport var defined = operator('defined');\nexport var not = operator('not');\nexport var tan = operator('tan');\nexport var acos = operator('acos');\nexport var asin = operator('asin');\nexport var atan = operator('atan');","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/node_modules/react-native-reanimated/src/operators.js"],"names":["createAnimatedOperator","operator","add","sub","multiply","divide","pow","modulo","sqrt","sin","cos","exp","round","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","and","or","defined","not","tan","acos","asin","atan"],"mappings":"AAAA,SAASA,sBAAT;AAEA,IAAMC,QAAQ,GAAGD,sBAAjB;AAEA,OAAO,IAAME,GAAG,GAAGD,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAME,GAAG,GAAGF,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMG,QAAQ,GAAGH,QAAQ,CAAC,UAAD,CAAzB;AACP,OAAO,IAAMI,MAAM,GAAGJ,QAAQ,CAAC,QAAD,CAAvB;AACP,OAAO,IAAMK,GAAG,GAAGL,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMM,MAAM,GAAGN,QAAQ,CAAC,QAAD,CAAvB;AACP,OAAO,IAAMO,IAAI,GAAGP,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAMQ,GAAG,GAAGR,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMS,GAAG,GAAGT,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMU,GAAG,GAAGV,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMW,KAAK,GAAGX,QAAQ,CAAC,OAAD,CAAtB;AACP,OAAO,IAAMY,QAAQ,GAAGZ,QAAQ,CAAC,UAAD,CAAzB;AACP,OAAO,IAAMa,EAAE,GAAGb,QAAQ,CAAC,IAAD,CAAnB;AACP,OAAO,IAAMc,WAAW,GAAGd,QAAQ,CAAC,aAAD,CAA5B;AACP,OAAO,IAAMe,QAAQ,GAAGf,QAAQ,CAAC,UAAD,CAAzB;AACP,OAAO,IAAMgB,WAAW,GAAGhB,QAAQ,CAAC,aAAD,CAA5B;AACP,OAAO,IAAMiB,GAAG,GAAGjB,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMkB,GAAG,GAAGlB,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMmB,EAAE,GAAGnB,QAAQ,CAAC,IAAD,CAAnB;AACP,OAAO,IAAMoB,OAAO,GAAGpB,QAAQ,CAAC,SAAD,CAAxB;AACP,OAAO,IAAMqB,GAAG,GAAGrB,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMsB,GAAG,GAAGtB,QAAQ,CAAC,KAAD,CAApB;AACP,OAAO,IAAMuB,IAAI,GAAGvB,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAMwB,IAAI,GAAGxB,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAMyB,IAAI,GAAGzB,QAAQ,CAAC,MAAD,CAArB","sourcesContent":["import { createAnimatedOperator } from './core/AnimatedOperator';\n\nconst operator = createAnimatedOperator;\n\nexport const add = operator('add');\nexport const sub = operator('sub');\nexport const multiply = operator('multiply');\nexport const divide = operator('divide');\nexport const pow = operator('pow');\nexport const modulo = operator('modulo');\nexport const sqrt = operator('sqrt');\nexport const sin = operator('sin');\nexport const cos = operator('cos');\nexport const exp = operator('exp');\nexport const round = operator('round');\nexport const lessThan = operator('lessThan');\nexport const eq = operator('eq');\nexport const greaterThan = operator('greaterThan');\nexport const lessOrEq = operator('lessOrEq');\nexport const greaterOrEq = operator('greaterOrEq');\nexport const neq = operator('neq');\nexport const and = operator('and');\nexport const or = operator('or');\nexport const defined = operator('defined');\nexport const not = operator('not');\nexport const tan = operator('tan');\nexport const acos = operator('acos');\nexport const asin = operator('asin');\nexport const atan = operator('atan');\n"]},"metadata":{},"sourceType":"module"}