{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/node_modules/react-native-scrollable-tab-view/index.js\";\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar _ReactNative = ReactNative = require('react-native'),\n    ViewPropTypes = _ReactNative.ViewPropTypes;\n\nvar createReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nvar _ReactNative2 = ReactNative,\n    Dimensions = _ReactNative2.Dimensions,\n    View = _ReactNative2.View,\n    Animated = _ReactNative2.Animated,\n    ScrollView = _ReactNative2.ScrollView,\n    Platform = _ReactNative2.Platform,\n    StyleSheet = _ReactNative2.StyleSheet,\n    InteractionManager = _ReactNative2.InteractionManager;\n\nvar ViewPagerAndroid = require('@react-native-community/viewpager');\n\nvar TimerMixin = require('react-timer-mixin');\n\nvar ViewPager = require('@react-native-community/viewpager');\n\nvar SceneComponent = require(\"./SceneComponent\");\n\nvar DefaultTabBar = require(\"./DefaultTabBar\");\n\nvar ScrollableTabBar = require(\"./ScrollableTabBar\");\n\nvar AnimatedViewPagerAndroid = Platform.OS === 'android' ? Animated.createAnimatedComponent(ViewPager) : undefined;\nvar ScrollableTabView = createReactClass({\n  displayName: \"ScrollableTabView\",\n  mixins: [TimerMixin],\n  statics: {\n    DefaultTabBar: DefaultTabBar,\n    ScrollableTabBar: ScrollableTabBar\n  },\n  scrollOnMountCalled: false,\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    tabBarUnderlineStyle: ViewPropTypes.style,\n    tabBarBackgroundColor: PropTypes.string,\n    tabBarActiveTextColor: PropTypes.string,\n    tabBarInactiveTextColor: PropTypes.string,\n    tabBarTextStyle: PropTypes.object,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: function onChangeTab() {},\n      onScroll: function onScroll() {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n  getInitialState: function getInitialState() {\n    var _this = this;\n\n    var containerWidth = Dimensions.get('window').width;\n    var scrollValue;\n    var scrollXIOS;\n    var positionAndroid;\n    var offsetAndroid;\n\n    if (Platform.OS === 'ios') {\n      scrollXIOS = new Animated.Value(this.props.initialPage * containerWidth);\n      var containerWidthAnimatedValue = new Animated.Value(containerWidth);\n\n      containerWidthAnimatedValue.__makeNative();\n\n      scrollValue = Animated.divide(scrollXIOS, containerWidthAnimatedValue);\n\n      var callListeners = this._polyfillAnimatedValue(scrollValue);\n\n      scrollXIOS.addListener(function (_ref) {\n        var value = _ref.value;\n        return callListeners(value / _this.state.containerWidth);\n      });\n    } else {\n      positionAndroid = new Animated.Value(this.props.initialPage);\n      offsetAndroid = new Animated.Value(0);\n      scrollValue = Animated.add(positionAndroid, offsetAndroid);\n\n      var _callListeners = this._polyfillAnimatedValue(scrollValue);\n\n      var positionAndroidValue = this.props.initialPage;\n      var offsetAndroidValue = 0;\n      positionAndroid.addListener(function (_ref2) {\n        var value = _ref2.value;\n        positionAndroidValue = value;\n\n        _callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n      offsetAndroid.addListener(function (_ref3) {\n        var value = _ref3.value;\n        offsetAndroidValue = value;\n\n        _callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n    }\n\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: scrollValue,\n      scrollXIOS: scrollXIOS,\n      positionAndroid: positionAndroid,\n      offsetAndroid: offsetAndroid,\n      containerWidth: containerWidth,\n      sceneKeys: this.newSceneKeys({\n        currentPage: this.props.initialPage\n      })\n    };\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    if (this.props.children !== prevProps.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: this.props.children\n      });\n    }\n\n    if (this.props.page >= 0 && this.props.page !== this.state.currentPage) {\n      this.goToPage(this.props.page);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      this.state.scrollXIOS.removeAllListeners();\n    } else {\n      this.state.positionAndroid.removeAllListeners();\n      this.state.offsetAndroid.removeAllListeners();\n    }\n  },\n  goToPage: function goToPage(pageNumber) {\n    if (Platform.OS === 'ios') {\n      var offset = pageNumber * this.state.containerWidth;\n\n      if (this.scrollView) {\n        this.scrollView.getNode().scrollTo({\n          x: offset,\n          y: 0,\n          animated: !this.props.scrollWithoutAnimation\n        });\n      }\n    } else {\n      if (this.scrollView) {\n        if (this.props.scrollWithoutAnimation) {\n          this.scrollView.getNode().setPageWithoutAnimation(pageNumber);\n        } else {\n          this.scrollView.getNode().setPage(pageNumber);\n        }\n      }\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n  renderTabBar: function renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return React.createElement(DefaultTabBar, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 14\n        }\n      }));\n    }\n  },\n  updateSceneKeys: function updateSceneKeys(_ref4) {\n    var page = _ref4.page,\n        _ref4$children = _ref4.children,\n        children = _ref4$children === void 0 ? this.props.children : _ref4$children,\n        _ref4$callback = _ref4.callback,\n        callback = _ref4$callback === void 0 ? function () {} : _ref4$callback;\n    var newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children: children\n    });\n    this.setState({\n      currentPage: page,\n      sceneKeys: newKeys\n    }, callback);\n  },\n  newSceneKeys: function newSceneKeys(_ref5) {\n    var _this2 = this;\n\n    var _ref5$previousKeys = _ref5.previousKeys,\n        previousKeys = _ref5$previousKeys === void 0 ? [] : _ref5$previousKeys,\n        _ref5$currentPage = _ref5.currentPage,\n        currentPage = _ref5$currentPage === void 0 ? 0 : _ref5$currentPage,\n        _ref5$children = _ref5.children,\n        children = _ref5$children === void 0 ? this.props.children : _ref5$children;\n    var newKeys = [];\n\n    this._children(children).forEach(function (child, idx) {\n      var key = _this2._makeSceneKey(child, idx);\n\n      if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n\n    return newKeys;\n  },\n  _polyfillAnimatedValue: function _polyfillAnimatedValue(animatedValue) {\n    var listeners = new Set();\n\n    var addListener = function addListener(listener) {\n      listeners.add(listener);\n    };\n\n    var removeListener = function removeListener(listener) {\n      listeners.delete(listener);\n    };\n\n    var removeAllListeners = function removeAllListeners() {\n      listeners.clear();\n    };\n\n    animatedValue.addListener = addListener;\n    animatedValue.removeListener = removeListener;\n    animatedValue.removeAllListeners = removeAllListeners;\n    return function (value) {\n      return listeners.forEach(function (listener) {\n        return listener({\n          value: value\n        });\n      });\n    };\n  },\n  _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {\n    var numOfSibling = this.props.prerenderingSiblingsNumber;\n    return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n  },\n  _keyExists: function _keyExists(sceneKeys, key) {\n    return sceneKeys.find(function (sceneKey) {\n      return key === sceneKey;\n    });\n  },\n  _makeSceneKey: function _makeSceneKey(child, idx) {\n    return child.props.tabLabel + '_' + idx;\n  },\n  renderScrollableContent: function renderScrollableContent() {\n    var _this3 = this;\n\n    if (Platform.OS === 'ios') {\n      var scenes = this._composeScenes();\n\n      return React.createElement(Animated.ScrollView, _extends({\n        horizontal: true,\n        pagingEnabled: true,\n        automaticallyAdjustContentInsets: false,\n        contentOffset: {\n          x: this.props.initialPage * this.state.containerWidth\n        },\n        ref: function ref(scrollView) {\n          _this3.scrollView = scrollView;\n        },\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: this.state.scrollXIOS\n            }\n          }\n        }], {\n          useNativeDriver: true,\n          listener: this._onScroll\n        }),\n        onMomentumScrollBegin: this._onMomentumScrollBeginAndEnd,\n        onMomentumScrollEnd: this._onMomentumScrollBeginAndEnd,\n        scrollEventThrottle: 16,\n        scrollsToTop: false,\n        showsHorizontalScrollIndicator: false,\n        scrollEnabled: !this.props.locked,\n        directionalLockEnabled: true,\n        alwaysBounceVertical: false,\n        keyboardDismissMode: \"on-drag\"\n      }, this.props.contentProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 14\n        }\n      }), scenes);\n    } else {\n      var _scenes = this._composeScenes();\n\n      return React.createElement(AnimatedViewPagerAndroid, _extends({\n        key: this._children().length,\n        style: styles.scrollableContentAndroid,\n        initialPage: this.props.initialPage,\n        onPageSelected: this._updateSelectedPage,\n        keyboardDismissMode: \"on-drag\",\n        scrollEnabled: !this.props.locked,\n        onPageScroll: Animated.event([{\n          nativeEvent: {\n            position: this.state.positionAndroid,\n            offset: this.state.offsetAndroid\n          }\n        }], {\n          useNativeDriver: true,\n          listener: this._onScroll\n        }),\n        ref: function ref(scrollView) {\n          _this3.scrollView = scrollView;\n        }\n      }, this.props.contentProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 14\n        }\n      }), _scenes);\n    }\n  },\n  _composeScenes: function _composeScenes() {\n    var _this4 = this;\n\n    return this._children().map(function (child, idx) {\n      var key = _this4._makeSceneKey(child, idx);\n\n      return React.createElement(SceneComponent, {\n        key: child.key,\n        shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),\n        style: {\n          width: _this4.state.containerWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 14\n        }\n      }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {\n        tabLabel: child.props.tabLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 63\n        }\n      }));\n    });\n  },\n  _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {\n    var offsetX = e.nativeEvent.contentOffset.x;\n    var page = Math.round(offsetX / this.state.containerWidth);\n\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n  _updateSelectedPage: function _updateSelectedPage(nextPage) {\n    var localNextPage = nextPage;\n\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n  _onChangeTab: function _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n  _onScroll: function _onScroll(e) {\n    if (Platform.OS === 'ios') {\n      var offsetX = e.nativeEvent.contentOffset.x;\n\n      if (offsetX === 0 && !this.scrollOnMountCalled) {\n        this.scrollOnMountCalled = true;\n      } else {\n        this.props.onScroll(offsetX / this.state.containerWidth);\n      }\n    } else {\n      var _e$nativeEvent = e.nativeEvent,\n          position = _e$nativeEvent.position,\n          offset = _e$nativeEvent.offset;\n      this.props.onScroll(position + offset);\n    }\n  },\n  _handleLayout: function _handleLayout(e) {\n    var _this5 = this;\n\n    var width = e.nativeEvent.layout.width;\n\n    if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {\n      return;\n    }\n\n    if (Platform.OS === 'ios') {\n      var containerWidthAnimatedValue = new Animated.Value(width);\n\n      containerWidthAnimatedValue.__makeNative();\n\n      scrollValue = Animated.divide(this.state.scrollXIOS, containerWidthAnimatedValue);\n      this.setState({\n        containerWidth: width,\n        scrollValue: scrollValue\n      });\n    } else {\n      this.setState({\n        containerWidth: width\n      });\n    }\n\n    this.requestAnimationFrame(function () {\n      _this5.goToPage(_this5.state.currentPage);\n    });\n  },\n  _children: function _children() {\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;\n    return React.Children.map(children, function (child) {\n      return child;\n    });\n  },\n  render: function render() {\n    var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';\n    var tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(function (child) {\n        return child.props.tabLabel;\n      }),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n\n    if (overlayTabs) {\n      tabBarProps.style = _defineProperty({\n        position: 'absolute',\n        left: 0,\n        right: 0\n      }, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0);\n    }\n\n    return React.createElement(View, {\n      style: [styles.container, this.props.style],\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 12\n      }\n    }, this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps));\n  }\n});\nmodule.exports = ScrollableTabView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/node_modules/react-native-scrollable-tab-view/index.js"],"names":["React","require","Component","ReactNative","ViewPropTypes","createReactClass","PropTypes","Dimensions","View","Animated","ScrollView","Platform","StyleSheet","InteractionManager","ViewPagerAndroid","TimerMixin","ViewPager","SceneComponent","DefaultTabBar","ScrollableTabBar","AnimatedViewPagerAndroid","OS","createAnimatedComponent","undefined","ScrollableTabView","mixins","statics","scrollOnMountCalled","propTypes","tabBarPosition","oneOf","initialPage","number","page","onChangeTab","func","onScroll","renderTabBar","any","tabBarUnderlineStyle","style","tabBarBackgroundColor","string","tabBarActiveTextColor","tabBarInactiveTextColor","tabBarTextStyle","object","contentProps","scrollWithoutAnimation","bool","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","containerWidth","get","width","scrollValue","scrollXIOS","positionAndroid","offsetAndroid","Value","props","containerWidthAnimatedValue","__makeNative","divide","callListeners","_polyfillAnimatedValue","addListener","value","state","add","positionAndroidValue","offsetAndroidValue","currentPage","sceneKeys","newSceneKeys","componentDidUpdate","prevProps","children","updateSceneKeys","goToPage","componentWillUnmount","removeAllListeners","pageNumber","offset","scrollView","getNode","scrollTo","x","y","animated","setPageWithoutAnimation","setPage","callback","_onChangeTab","bind","cloneElement","newKeys","previousKeys","setState","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","animatedValue","listeners","Set","listener","removeListener","delete","clear","currentPageKey","numOfSibling","find","sceneKey","tabLabel","renderScrollableContent","scenes","_composeScenes","event","nativeEvent","contentOffset","useNativeDriver","_onScroll","_onMomentumScrollBeginAndEnd","length","styles","scrollableContentAndroid","_updateSelectedPage","position","map","e","offsetX","Math","round","nextPage","localNextPage","prevPage","i","ref","from","_handleLayout","layout","requestAnimationFrame","Children","render","overlayTabs","tabBarProps","tabs","activeTab","backgroundColor","activeTextColor","inactiveTextColor","textStyle","underlineStyle","left","right","container","module","exports","create","flex"],"mappings":"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","sourcesContent":["const React = require('react');\nconst { Component } = React;\nconst { ViewPropTypes } = ReactNative = require('react-native');\nconst createReactClass = require('create-react-class');\nconst PropTypes = require('prop-types');\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  Platform,\n  StyleSheet,\n  InteractionManager,\n} = ReactNative;\n\nconst ViewPagerAndroid = require('@react-native-community/viewpager');\nconst TimerMixin = require('react-timer-mixin');\nconst ViewPager = require('@react-native-community/viewpager');\n\nconst SceneComponent = require('./SceneComponent');\nconst DefaultTabBar = require('./DefaultTabBar');\nconst ScrollableTabBar = require('./ScrollableTabBar');\n\nconst AnimatedViewPagerAndroid = Platform.OS === 'android' ?\n  Animated.createAnimatedComponent(ViewPager) :\n  undefined;\n\nconst ScrollableTabView = createReactClass({\n  mixins: [TimerMixin, ],\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar,\n  },\n  scrollOnMountCalled: false,\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom', ]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    tabBarUnderlineStyle: ViewPropTypes.style,\n    tabBarBackgroundColor: PropTypes.string,\n    tabBarActiveTextColor: PropTypes.string,\n    tabBarInactiveTextColor: PropTypes.string,\n    tabBarTextStyle: PropTypes.object,\n    style: ViewPropTypes.style,\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number,\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0,\n    };\n  },\n\n  getInitialState() {\n    const containerWidth = Dimensions.get('window').width;\n    let scrollValue;\n    let scrollXIOS;\n    let positionAndroid;\n    let offsetAndroid;\n\n    if (Platform.OS === 'ios') {\n      scrollXIOS = new Animated.Value(this.props.initialPage * containerWidth);\n      const containerWidthAnimatedValue = new Animated.Value(containerWidth);\n      // Need to call __makeNative manually to avoid a native animated bug. See\n      // https://github.com/facebook/react-native/pull/14435\n      containerWidthAnimatedValue.__makeNative();\n      scrollValue = Animated.divide(scrollXIOS, containerWidthAnimatedValue);\n\n      const callListeners = this._polyfillAnimatedValue(scrollValue);\n      scrollXIOS.addListener(\n        ({ value, }) => callListeners(value / this.state.containerWidth)\n      );\n    } else {\n      positionAndroid = new Animated.Value(this.props.initialPage);\n      offsetAndroid = new Animated.Value(0);\n      scrollValue = Animated.add(positionAndroid, offsetAndroid);\n\n      const callListeners = this._polyfillAnimatedValue(scrollValue);\n      let positionAndroidValue = this.props.initialPage;\n      let offsetAndroidValue = 0;\n      positionAndroid.addListener(({ value, }) => {\n        positionAndroidValue = value;\n        callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n      offsetAndroid.addListener(({ value, }) => {\n        offsetAndroidValue = value;\n        callListeners(positionAndroidValue + offsetAndroidValue);\n      });\n    }\n\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue,\n      scrollXIOS,\n      positionAndroid,\n      offsetAndroid,\n      containerWidth,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage, }),\n    };\n  },\n\n  componentDidUpdate(prevProps) {\n    if (this.props.children !== prevProps.children) {\n      this.updateSceneKeys({ page: this.state.currentPage, children: this.props.children, });\n    }\n\n    if (this.props.page >= 0 && this.props.page !== this.state.currentPage) {\n      this.goToPage(this.props.page);\n    }\n  },\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      this.state.scrollXIOS.removeAllListeners();\n    } else {\n      this.state.positionAndroid.removeAllListeners();\n      this.state.offsetAndroid.removeAllListeners();\n    }\n  },\n\n  goToPage(pageNumber) {\n    if (Platform.OS === 'ios') {\n      const offset = pageNumber * this.state.containerWidth;\n      if (this.scrollView) {\n        this.scrollView.getNode().scrollTo({x: offset, y: 0, animated: !this.props.scrollWithoutAnimation, });\n      }\n    } else {\n      if (this.scrollView) {\n        if (this.props.scrollWithoutAnimation) {\n          this.scrollView.getNode().setPageWithoutAnimation(pageNumber);\n        } else {\n          this.scrollView.getNode().setPage(pageNumber);\n        }\n      }\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber),\n    });\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    } else {\n      return <DefaultTabBar {...props} />;\n    }\n  },\n\n  updateSceneKeys({ page, children = this.props.children, callback = () => {}, }) {\n    let newKeys = this.newSceneKeys({ previousKeys: this.state.sceneKeys, currentPage: page, children, });\n    this.setState({currentPage: page, sceneKeys: newKeys, }, callback);\n  },\n\n  newSceneKeys({ previousKeys = [], currentPage = 0, children = this.props.children, }) {\n    let newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      if (this._keyExists(previousKeys, key) ||\n        this._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  // Animated.add and Animated.divide do not currently support listeners so\n  // we have to polyfill it here since a lot of code depends on being able\n  // to add a listener to `scrollValue`. See https://github.com/facebook/react-native/pull/12620.\n  _polyfillAnimatedValue(animatedValue) {\n\n    const listeners = new Set();\n    const addListener = (listener) => {\n      listeners.add(listener);\n    };\n\n    const removeListener = (listener) => {\n      listeners.delete(listener);\n    };\n\n    const removeAllListeners = () => {\n      listeners.clear();\n    };\n\n    animatedValue.addListener = addListener;\n    animatedValue.removeListener = removeListener;\n    animatedValue.removeAllListeners = removeAllListeners;\n\n    return (value) => listeners.forEach(listener => listener({ value, }));\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    let numOfSibling = this.props.prerenderingSiblingsNumber;\n    return (idx < (currentPageKey + numOfSibling + 1) &&\n      idx > (currentPageKey - numOfSibling - 1));\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find((sceneKey) => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return child.props.tabLabel + '_' + idx;\n  },\n\n  renderScrollableContent() {\n    if (Platform.OS === 'ios') {\n      const scenes = this._composeScenes();\n      return <Animated.ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        contentOffset={{ x: this.props.initialPage * this.state.containerWidth, }}\n        ref={(scrollView) => { this.scrollView = scrollView; }}\n        onScroll={Animated.event(\n          [{ nativeEvent: { contentOffset: { x: this.state.scrollXIOS, }, }, }, ],\n          { useNativeDriver: true, listener: this._onScroll, }\n        )}\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n          {scenes}\n      </Animated.ScrollView>;\n    } else {\n      const scenes = this._composeScenes();\n      return <AnimatedViewPagerAndroid\n        key={this._children().length}\n        style={styles.scrollableContentAndroid}\n        initialPage={this.props.initialPage}\n        onPageSelected={this._updateSelectedPage}\n        keyboardDismissMode=\"on-drag\"\n        scrollEnabled={!this.props.locked}\n        onPageScroll={Animated.event(\n          [{\n            nativeEvent: {\n              position: this.state.positionAndroid,\n              offset: this.state.offsetAndroid,\n            },\n          }, ],\n          {\n            useNativeDriver: true,\n            listener: this._onScroll,\n          },\n        )}\n        ref={(scrollView) => { this.scrollView = scrollView; }}\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </AnimatedViewPagerAndroid>;\n    }\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      let key = this._makeSceneKey(child, idx);\n      return <SceneComponent\n        key={child.key}\n        shouldUpdated={this._shouldRenderSceneKey(idx, this.state.currentPage)}\n        style={{width: this.state.containerWidth, }}\n      >\n        {this._keyExists(this.state.sceneKeys, key) ? child : <View tabLabel={child.props.tabLabel}/>}\n      </SceneComponent>;\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage),\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage,\n    });\n  },\n\n  _onScroll(e) {\n    if (Platform.OS === 'ios') {\n      const offsetX = e.nativeEvent.contentOffset.x;\n      if (offsetX === 0 && !this.scrollOnMountCalled) {\n        this.scrollOnMountCalled = true;\n      } else {\n        this.props.onScroll(offsetX / this.state.containerWidth);\n      }\n    } else {\n      const { position, offset, } = e.nativeEvent;\n      this.props.onScroll(position + offset);\n    }\n  },\n\n  _handleLayout(e) {\n    const { width, } = e.nativeEvent.layout;\n\n    if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {\n      return;\n    }\n    \n    if (Platform.OS === 'ios') {\n      const containerWidthAnimatedValue = new Animated.Value(width);\n      // Need to call __makeNative manually to avoid a native animated bug. See\n      // https://github.com/facebook/react-native/pull/14435\n      containerWidthAnimatedValue.__makeNative();\n      scrollValue = Animated.divide(this.state.scrollXIOS, containerWidthAnimatedValue);\n      this.setState({ containerWidth: width, scrollValue, });\n    } else {\n      this.setState({ containerWidth: width, });\n    }\n    this.requestAnimationFrame(() => {\n      this.goToPage(this.state.currentPage);\n    });\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, (child) => child);\n  },\n\n  render() {\n    let overlayTabs = (this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom');\n    let tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map((child) => child.props.tabLabel),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth,\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom']: 0,\n      };\n    }\n\n    return <View style={[styles.container, this.props.style, ]} onLayout={this._handleLayout}>\n      {this.props.tabBarPosition === 'top' && this.renderTabBar(tabBarProps)}\n      {this.renderScrollableContent()}\n      {(this.props.tabBarPosition === 'bottom' || overlayTabs) && this.renderTabBar(tabBarProps)}\n    </View>;\n  },\n});\n\nmodule.exports = ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollableContentAndroid: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}