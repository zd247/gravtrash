{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport colors from \"../assets/colors\";\nimport { connect } from 'react-redux';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nvar elevateValue = 50;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar _Animated = Animated,\n    Value = _Animated.Value,\n    event = _Animated.event,\n    block = _Animated.block,\n    cond = _Animated.cond,\n    eq = _Animated.eq,\n    set = _Animated.set,\n    Clock = _Animated.Clock,\n    startClock = _Animated.startClock,\n    stopClock = _Animated.stopClock,\n    debug = _Animated.debug,\n    timing = _Animated.timing,\n    clockRunning = _Animated.clockRunning,\n    interpolate = _Animated.interpolate,\n    Extrapolate = _Animated.Extrapolate,\n    concat = _Animated.concat;\n\nvar runTiming = function runTiming(clock, value, dest) {\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    duration: 1000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease)\n  };\n  return block([cond(clockRunning(clock), 0, [set(state.finished, 0), set(state.time, 0), set(state.position, value), set(state.frameTime, 0), set(config.toValue, dest), startClock(clock)]), timing(clock, state, config), cond(state.finished, stopClock(clock)), state.position]);\n};\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.renderAuthContainer = function () {\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 4\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread({\n          zIndex: _this.textInputZindex,\n          opacity: _this.textInputOpacity,\n          height: height / 3\n        }, StyleSheet.absoluteFill, {\n          top: null,\n          justifyContent: 'center',\n          transform: [{\n            translateY: _this.textInputY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 5\n        }\n      }, React.createElement(TapGestureHandler, {\n        onHandlerStateChange: _this.onCloseState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }\n      }, React.createElement(Animated.View, {\n        onTouchStart: (Keyboard.dismiss, _this.handleLoginOnClick()),\n        style: styles.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, {\n        style: {\n          fontSize: 15,\n          transform: [{\n            rotate: concat(_this.rotateCross, 'deg')\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 8\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          marginStart: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }\n      }, \"Phone number\"), React.createElement(TextInput, {\n        placeholder: \"Ex: (012) 345-6789\",\n        style: styles.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }\n      }), React.createElement(TouchableNativeFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.sendCodeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 8\n        }\n      }, \"Continue\")))));\n    };\n\n    _this.state = {\n      isLoading: false\n    };\n    _this.buttonOpacity = new Value(1);\n    _this.onStateChange = event([{\n      nativeEvent: function nativeEvent(_ref) {\n        var state = _ref.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 1, 0)))]);\n      }\n    }]);\n    _this.onCloseState = event([{\n      nativeEvent: function nativeEvent(_ref2) {\n        var state = _ref2.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 0, 1)))]);\n      }\n    }]);\n    _this.buttonY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [100, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.bgY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [-height / 3 - elevateValue, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputZindex = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, -1],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [0, 100],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputOpacity = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.rotateCross = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [180, 360],\n      extrapolate: Extrapolate.CLAMP\n    });\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 4\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }\n      })) : null, React.createElement(View, {\n        style: {\n          flex: 1,\n          borderColor: 'white',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-nuclear\",\n        size: 150,\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 6\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }\n      }, \"Trash Grav\")), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: 'abc@example.com',\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"enter password\",\n        placeholderTextColor: colors.bgTextInputDark,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 5\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 5\n        }\n      }, React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Login in\",\n        onPress: this.onSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }\n      }, \"Login\")), React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Sign Up\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SignUpScreen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, \"Sign Up\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: 'black',\n    paddingHorizontal: 10\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: 'transparent',\n    marginBottom: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","colors","connect","firebase","elevateValue","Dimensions","get","width","height","Animated","Value","event","block","cond","eq","set","Clock","startClock","stopClock","debug","timing","clockRunning","interpolate","Extrapolate","concat","runTiming","clock","value","dest","state","finished","position","time","frameTime","config","duration","toValue","easing","Easing","inOut","ease","LoginScreen","renderAuthContainer","Keyboard","dismiss","zIndex","textInputZindex","opacity","textInputOpacity","StyleSheet","absoluteFill","top","justifyContent","transform","translateY","textInputY","onCloseState","handleLoginOnClick","styles","closeButton","fontSize","rotate","rotateCross","marginStart","textInput","sendCodeText","fontWeight","isLoading","buttonOpacity","onStateChange","nativeEvent","State","END","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","flex","backgroundColor","alignItems","elevation","logoColor","borderColor","color","bgTextInputDark","email","setState","password","marginTop","loginButtons","bgPrimary","onSignIn","props","navigation","navigate","mapDispatchToProps","dispatch","signIn","user","type","payload","signOut","create","container","bgMain","borderWidth","marginHorizontal","marginBottom","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tActivityIndicator,\n} from 'react-native'\n\nimport colors from '../assets/colors'\nimport { connect } from 'react-redux'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst elevateValue = 50\nconst { width, height } = Dimensions.get('window')\nconst {\n\tValue,\n\tevent,\n\tblock,\n\tcond,\n\teq,\n\tset,\n\tClock,\n\tstartClock,\n\tstopClock,\n\tdebug,\n\ttiming,\n\tclockRunning,\n\tinterpolate,\n\tExtrapolate,\n\tconcat,\n} = Animated\n\nconst runTiming = (clock, value, dest) => {\n\tconst state = {\n\t\tfinished: new Value(0),\n\t\tposition: new Value(0),\n\t\ttime: new Value(0),\n\t\tframeTime: new Value(0),\n\t}\n\n\tconst config = {\n\t\tduration: 1000,\n\t\ttoValue: new Value(0),\n\t\teasing: Easing.inOut(Easing.ease),\n\t}\n\n\treturn block([\n\t\tcond(clockRunning(clock), 0, [\n\t\t\tset(state.finished, 0),\n\t\t\tset(state.time, 0),\n\t\t\tset(state.position, value),\n\t\t\tset(state.frameTime, 0),\n\t\t\tset(config.toValue, dest),\n\t\t\tstartClock(clock),\n\t\t]),\n\t\ttiming(clock, state, config),\n\t\tcond(state.finished, stopClock(clock)),\n\t\tstate.position,\n\t])\n}\n\nclass LoginScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t}\n\n\t\tthis.buttonOpacity = new Value(1)\n\n\t\tthis.onStateChange = event([\n\t\t\t{\n\t\t\t\tnativeEvent: ({ state }) =>\n\t\t\t\t\tblock([\n\t\t\t\t\t\tcond(\n\t\t\t\t\t\t\teq(state, State.END),\n\t\t\t\t\t\t\tset(this.buttonOpacity, runTiming(new Clock(), 1, 0))\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t},\n\t\t])\n\n\t\tthis.onCloseState = event([\n\t\t\t{\n\t\t\t\tnativeEvent: ({ state }) =>\n\t\t\t\t\tblock([\n\t\t\t\t\t\tcond(\n\t\t\t\t\t\t\teq(state, State.END),\n\t\t\t\t\t\t\tset(this.buttonOpacity, runTiming(new Clock(), 0, 1))\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t},\n\t\t])\n\n\t\tthis.buttonY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [100, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.bgY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [-height / 3 - elevateValue, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\t// text input\n\t\tthis.textInputZindex = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [1, -1],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.textInputY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [0, 100],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.textInputOpacity = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [1, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\t// close button\n\t\tthis.rotateCross = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [180, 360],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\t}\n\n\trenderAuthContainer = () => {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n\t\t\t\t<Animated.View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tzIndex: this.textInputZindex,\n\t\t\t\t\t\topacity: this.textInputOpacity,\n\t\t\t\t\t\theight: height / 3,\n\t\t\t\t\t\t...StyleSheet.absoluteFill,\n\t\t\t\t\t\ttop: null,\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\ttransform: [{ translateY: this.textInputY }],\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TapGestureHandler onHandlerStateChange={this.onCloseState}>\n\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\tonTouchStart={(Keyboard.dismiss, this.handleLoginOnClick())}\n\t\t\t\t\t\t\tstyle={styles.closeButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Animated.Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: 15,\n\t\t\t\t\t\t\t\t\ttransform: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trotate: concat(this.rotateCross, 'deg'),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t</Animated.Text>\n\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t</TapGestureHandler>\n\n\t\t\t\t\t<Text style={{ marginStart: 30 }}>Phone number</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder='Ex: (012) 345-6789'\n\t\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* send code text btn */}\n\t\t\t\t\t<TouchableNativeFeedback>\n\t\t\t\t\t\t<View style={styles.sendCodeText}>\n\t\t\t\t\t\t\t<Text style={{ fontSize: 30, fontWeight: 'bold' }}>Continue</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableNativeFeedback>\n\t\t\t\t</Animated.View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t</View>\n\t\t\t\t) : null}\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\tborderColor: 'white',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Ionicons name='ios-nuclear' size={150} color={colors.logoColor} />\n\t\t\t\t\t<Text style={{ fontSize: 50, fontWeight: '100', color: 'green' }}>\n\t\t\t\t\t\tTrash Grav\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tplaceholder={'abc@example.com'}\n\t\t\t\t\tplaceholderTextColor={colors.bgTextInputDark}\n\t\t\t\t\tkeyboardType='email-address'\n\t\t\t\t\tonChangeText={email => this.setState({ email })}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tplaceholder='enter password'\n\t\t\t\t\tplaceholderTextColor={colors.bgTextInputDark}\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tonChangeText={password => this.setState({ password })}\n\t\t\t\t/>\n\t\t\t\t<View style={{ flex: 1, alignItems: 'center', marginTop: 30 }}>\n\t\t\t\t\t<CustomActionButton\n\t\t\t\t\t\tstyle={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n\t\t\t\t\t\ttitle='Login in'\n\t\t\t\t\t\tonPress={this.onSignIn}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ fontWeight: '100', color: 'green' }}>Login</Text>\n\t\t\t\t\t</CustomActionButton>\n\n\t\t\t\t\t<CustomActionButton\n\t\t\t\t\t\tstyle={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n\t\t\t\t\t\ttitle='Sign Up'\n\t\t\t\t\t\tonPress={() => this.props.navigation.navigate('SignUpScreen')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ fontWeight: '100', color: 'green' }}>Sign Up</Text>\n\t\t\t\t\t</CustomActionButton>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(LoginScreen)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: colors.bgMain,\n\t},\n\ttextInput: {\n\t\theight: 50,\n\t\tborderWidth: 0.5,\n\t\tborderColor: colors.borderColor,\n\t\tmarginHorizontal: 40,\n\t\tmarginBottom: 10,\n\t\tcolor: 'black',\n\t\tpaddingHorizontal: 10,\n\t},\n\tloginButtons: {\n\t\tborderWidth: 0.5,\n\t\tbackgroundColor: 'transparent',\n\t\tmarginBottom: 10,\n\t\twidth: 200,\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}