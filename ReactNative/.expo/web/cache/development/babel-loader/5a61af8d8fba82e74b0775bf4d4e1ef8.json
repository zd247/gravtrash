{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport colors from \"../assets/colors\";\nimport { connect } from 'react-redux';\nimport Svg, { Image, Circle, ClipPath } from 'react-native-svg';\nimport Animated, { Easing } from 'react-native-reanimated';\nimport { TapGestureHandler, State } from 'react-native-gesture-handler';\nvar elevateValue = 50;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Value = Animated.Value,\n    event = Animated.event,\n    block = Animated.block,\n    cond = Animated.cond,\n    eq = Animated.eq,\n    set = Animated.set,\n    Clock = Animated.Clock,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    debug = Animated.debug,\n    timing = Animated.timing,\n    clockRunning = Animated.clockRunning,\n    interpolate = Animated.interpolate,\n    Extrapolate = Animated.Extrapolate,\n    concat = Animated.concat;\n\nvar runTiming = function runTiming(clock, value, dest) {\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    duration: 1000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease)\n  };\n  return block([cond(clockRunning(clock), 0, [set(state.finished, 0), set(state.time, 0), set(state.position, value), set(state.frameTime, 0), set(config.toValue, dest), startClock(clock)]), timing(clock, state, config), cond(state.finished, stopClock(clock)), state.position]);\n};\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.renderAuthContainer = function () {\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 4\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread({\n          zIndex: _this.textInputZindex,\n          opacity: _this.textInputOpacity,\n          height: height / 3\n        }, StyleSheet.absoluteFill, {\n          top: null,\n          justifyContent: 'center',\n          transform: [{\n            translateY: _this.textInputY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }\n      }, React.createElement(TapGestureHandler, {\n        onHandlerStateChange: _this.onCloseState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }\n      }, React.createElement(Animated.View, {\n        onTouchStart: (Keyboard.dismiss, _this.handleLoginOnClick()),\n        style: styles.closeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.Text, {\n        style: {\n          fontSize: 15,\n          transform: [{\n            rotate: concat(_this.rotateCross, 'deg')\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 8\n        }\n      }, \"X\"))), React.createElement(Text, {\n        style: {\n          marginStart: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }\n      }, \"Phone number\"), React.createElement(TextInput, {\n        placeholder: \"Ex: (012) 345-6789\",\n        style: styles.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 6\n        }\n      }), React.createElement(TouchableNativeFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.sendCodeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }\n      }, \"Continue\")))));\n    };\n\n    _this.state = {\n      isLoading: false\n    };\n    _this.buttonOpacity = new Value(1);\n    _this.onStateChange = event([{\n      nativeEvent: function nativeEvent(_ref) {\n        var state = _ref.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 1, 0)))]);\n      }\n    }]);\n    _this.onCloseState = event([{\n      nativeEvent: function nativeEvent(_ref2) {\n        var state = _ref2.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 0, 1)))]);\n      }\n    }]);\n    _this.buttonY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [100, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.bgY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [-height / 3 - elevateValue, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputZindex = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, -1],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputY = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [0, 100],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.textInputOpacity = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n    _this.rotateCross = interpolate(_this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [180, 360],\n      extrapolate: Extrapolate.CLAMP\n    });\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 4\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      })) : null, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 5\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread({}, StyleSheet.absoluteFill, {\n          transform: [{\n            translateY: this.bgY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 8\n        }\n      }, React.createElement(Svg, {\n        height: height + elevateValue,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, React.createElement(ClipPath, {\n        id: \"clip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 10\n        }\n      }, React.createElement(Circle, {\n        r: height + elevateValue,\n        cx: width / 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      })), React.createElement(Image, {\n        href: require(\"../assets/background_login.jpg\"),\n        width: width,\n        height: height + elevateValue,\n        preserveAspectRatio: \"xMidYMid slice\",\n        clipPath: \"url(#clip)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 10\n        }\n      }))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 8\n        }\n      }, React.createElement(TapGestureHandler, {\n        onHandlerStateChange: this.onStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread({}, styles.button, {\n          opacity: this.buttonOpacity,\n          transform: [{\n            translateY: this.buttonY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, \"Sign in\"))), React.createElement(TapGestureHandler, {\n        onHandlerStateChange: this.onStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: _objectSpread({}, styles.button, {\n          opacity: this.buttonOpacity,\n          transform: [{\n            translateY: this.buttonY\n          }]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 10\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }\n      }, \"Register\")))), this.renderAuthContainer()))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: 'black',\n    paddingHorizontal: 10\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: 'transparent',\n    marginBottom: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","colors","connect","Svg","Image","Circle","ClipPath","Animated","Easing","TapGestureHandler","State","elevateValue","Dimensions","get","width","height","Value","event","block","cond","eq","set","Clock","startClock","stopClock","debug","timing","clockRunning","interpolate","Extrapolate","concat","runTiming","clock","value","dest","state","finished","position","time","frameTime","config","duration","toValue","easing","inOut","ease","LoginScreen","renderAuthContainer","Keyboard","dismiss","zIndex","textInputZindex","opacity","textInputOpacity","StyleSheet","absoluteFill","top","justifyContent","transform","translateY","textInputY","onCloseState","handleLoginOnClick","styles","closeButton","fontSize","rotate","rotateCross","marginStart","textInput","sendCodeText","fontWeight","isLoading","buttonOpacity","onStateChange","nativeEvent","END","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","flex","backgroundColor","alignItems","elevation","logoColor","container","require","buttonContainer","button","mapDispatchToProps","dispatch","signIn","user","type","payload","signOut","create","bgMain","borderWidth","borderColor","marginHorizontal","marginBottom","color","paddingHorizontal","loginButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tDimensions,\n\tActivityIndicator,\n\tScrollView,\n\tKeyboard,\n\tTouchableNativeFeedback,\n\tTouchableWithoutFeedback,\n} from 'react-native'\n\nimport colors from '../assets/colors'\nimport { connect } from 'react-redux'\n\nimport Svg, { Image, Circle, ClipPath } from 'react-native-svg'\nimport Animated, { Easing } from 'react-native-reanimated'\nimport { TapGestureHandler, State } from 'react-native-gesture-handler'\n\n// import * as firebase from 'firebase/app'\n// import 'firebase/auth'\n// import 'firebase/database'\n\nconst elevateValue = 50\nconst { width, height } = Dimensions.get('window')\nconst {\n\tValue,\n\tevent,\n\tblock,\n\tcond,\n\teq,\n\tset,\n\tClock,\n\tstartClock,\n\tstopClock,\n\tdebug,\n\ttiming,\n\tclockRunning,\n\tinterpolate,\n\tExtrapolate,\n\tconcat,\n} = Animated\n\nconst runTiming = (clock, value, dest) => {\n\tconst state = {\n\t\tfinished: new Value(0),\n\t\tposition: new Value(0),\n\t\ttime: new Value(0),\n\t\tframeTime: new Value(0),\n\t}\n\n\tconst config = {\n\t\tduration: 1000,\n\t\ttoValue: new Value(0),\n\t\teasing: Easing.inOut(Easing.ease),\n\t}\n\n\treturn block([\n\t\tcond(clockRunning(clock), 0, [\n\t\t\tset(state.finished, 0),\n\t\t\tset(state.time, 0),\n\t\t\tset(state.position, value),\n\t\t\tset(state.frameTime, 0),\n\t\t\tset(config.toValue, dest),\n\t\t\tstartClock(clock),\n\t\t]),\n\t\ttiming(clock, state, config),\n\t\tcond(state.finished, stopClock(clock)),\n\t\tstate.position,\n\t])\n}\n\nclass LoginScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t}\n\n\t\tthis.buttonOpacity = new Value(1)\n\n\t\tthis.onStateChange = event([\n\t\t\t{\n\t\t\t\tnativeEvent: ({ state }) =>\n\t\t\t\t\tblock([\n\t\t\t\t\t\tcond(\n\t\t\t\t\t\t\teq(state, State.END),\n\t\t\t\t\t\t\tset(this.buttonOpacity, runTiming(new Clock(), 1, 0))\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t},\n\t\t])\n\n\t\tthis.onCloseState = event([\n\t\t\t{\n\t\t\t\tnativeEvent: ({ state }) =>\n\t\t\t\t\tblock([\n\t\t\t\t\t\tcond(\n\t\t\t\t\t\t\teq(state, State.END),\n\t\t\t\t\t\t\tset(this.buttonOpacity, runTiming(new Clock(), 0, 1))\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t},\n\t\t])\n\n\t\tthis.buttonY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [100, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.bgY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [-height / 3 - elevateValue, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\t// text input\n\t\tthis.textInputZindex = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [1, -1],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.textInputY = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [0, 100],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\tthis.textInputOpacity = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [1, 0],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\n\t\t// close button\n\t\tthis.rotateCross = interpolate(this.buttonOpacity, {\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [180, 360],\n\t\t\textrapolate: Extrapolate.CLAMP,\n\t\t})\n\t}\n\n\trenderAuthContainer = () => {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n\t\t\t\t<Animated.View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tzIndex: this.textInputZindex,\n\t\t\t\t\t\topacity: this.textInputOpacity,\n\t\t\t\t\t\theight: height / 3,\n\t\t\t\t\t\t...StyleSheet.absoluteFill,\n\t\t\t\t\t\ttop: null,\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\ttransform: [{ translateY: this.textInputY }],\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TapGestureHandler onHandlerStateChange={this.onCloseState}>\n\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\tonTouchStart={(Keyboard.dismiss, this.handleLoginOnClick())}\n\t\t\t\t\t\t\tstyle={styles.closeButton}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Animated.Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: 15,\n\t\t\t\t\t\t\t\t\ttransform: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\trotate: concat(this.rotateCross, 'deg'),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t</Animated.Text>\n\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t</TapGestureHandler>\n\n\t\t\t\t\t<Text style={{ marginStart: 30 }}>Phone number</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tplaceholder='Ex: (012) 345-6789'\n\t\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* send code text btn */}\n\t\t\t\t\t<TouchableNativeFeedback>\n\t\t\t\t\t\t<View style={styles.sendCodeText}>\n\t\t\t\t\t\t\t<Text style={{ fontSize: 30, fontWeight: 'bold' }}>Continue</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableNativeFeedback>\n\t\t\t\t</Animated.View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t</View>\n\t\t\t\t) : null}\n\t\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t\t<ScrollView style={{ flex: 1 }}>\n\t\t\t\t\t\t<View style={styles.container}>\n\t\t\t\t\t\t\t{/* background image */}\n\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t...StyleSheet.absoluteFill,\n\t\t\t\t\t\t\t\t\ttransform: [{ translateY: this.bgY }],\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Svg height={height + elevateValue} width={width}>\n\t\t\t\t\t\t\t\t\t<ClipPath id='clip'>\n\t\t\t\t\t\t\t\t\t\t<Circle r={height + elevateValue} cx={width / 2} />\n\t\t\t\t\t\t\t\t\t</ClipPath>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\thref={require('../assets/background_login.jpg')}\n\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\theight={height + elevateValue}\n\t\t\t\t\t\t\t\t\t\tpreserveAspectRatio='xMidYMid slice'\n\t\t\t\t\t\t\t\t\t\tclipPath='url(#clip)'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Svg>\n\t\t\t\t\t\t\t</Animated.View>\n\n\t\t\t\t\t\t\t{/* button container */}\n\t\t\t\t\t\t\t<View style={styles.buttonContainer}>\n\t\t\t\t\t\t\t\t{/* login button */}\n\t\t\t\t\t\t\t\t<TapGestureHandler onHandlerStateChange={this.onStateChange}>\n\t\t\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...styles.button,\n\t\t\t\t\t\t\t\t\t\t\topacity: this.buttonOpacity,\n\t\t\t\t\t\t\t\t\t\t\ttransform: [{ translateY: this.buttonY }],\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20, fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t\t\t\t</TapGestureHandler>\n\n\t\t\t\t\t\t\t\t{/* register button */}\n\t\t\t\t\t\t\t\t<TapGestureHandler onHandlerStateChange={this.onStateChange}>\n\t\t\t\t\t\t\t\t\t<Animated.View\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t...styles.button,\n\t\t\t\t\t\t\t\t\t\t\topacity: this.buttonOpacity,\n\t\t\t\t\t\t\t\t\t\t\ttransform: [{ translateY: this.buttonY }],\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20, fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Animated.View>\n\t\t\t\t\t\t\t\t</TapGestureHandler>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t{this.renderAuthContainer()}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(LoginScreen)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: colors.bgMain,\n\t},\n\ttextInput: {\n\t\theight: 50,\n\t\tborderWidth: 0.5,\n\t\tborderColor: colors.borderColor,\n\t\tmarginHorizontal: 40,\n\t\tmarginBottom: 10,\n\t\tcolor: 'black',\n\t\tpaddingHorizontal: 10,\n\t},\n\tloginButtons: {\n\t\tborderWidth: 0.5,\n\t\tbackgroundColor: 'transparent',\n\t\tmarginBottom: 10,\n\t\twidth: 200,\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}