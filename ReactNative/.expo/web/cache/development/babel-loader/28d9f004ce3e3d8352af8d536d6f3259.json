{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/SignUpScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../assets/colors\";\nimport CustomActionButton from \"../components/CustomTempButton\";\nimport { connect } from \"react-redux\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen() {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this);\n\n    _this.onSignUp = function _callee() {\n      var response, user;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.email && _this.state.password && _this.state.firstName && _this.state.lastName)) {\n                _context.next = 21;\n                break;\n              }\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password));\n\n            case 5:\n              response = _context.sent;\n\n              if (!response) {\n                _context.next = 12;\n                break;\n              }\n\n              _this.setState({\n                isLoading: false\n              });\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"Users\").child(response.user.uid).set({\n                email: response.user.email,\n                first_name: _this.state.firstName,\n                last_name: _this.state.lastName,\n                uid: response.user.uid\n              }));\n\n            case 10:\n              user = _context.sent;\n\n              _this.props.signIn(response.user);\n\n            case 12:\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                isLoading: false\n              });\n\n              if (_context.t0.code == \"auth/email-already-in-use\") {\n                alert(\"User already exists.Try loggin in\");\n              }\n\n              console.log(_context.t0);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              alert(\"All fields are required to sign up\");\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 14]], Promise);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      })) : null, React.createElement(View, {\n        style: {\n          flex: 1,\n          borderColor: \"white\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-nuclear\",\n        size: 150,\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          fontWeight: \"100\",\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, \"Trash Grav\")), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"First Name\",\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(firstName) {\n          return _this2.setState({\n            firstName: firstName\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Last Name\",\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(lastName) {\n          return _this2.setState({\n            lastName: lastName\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"abc@example.com\",\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"enter password\",\n        placeholderTextColor: colors.bgTextInputDark,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Sign Up\",\n        onPress: this.onSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"100\",\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, \"Sign Up Now!!\")))));\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: \"SIGN_IN\",\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: \"SIGN_OUT\"\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUpScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain,\n    paddingTop: Platform.OS == \"android\" ? 50 : 0\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: \"black\",\n    paddingHorizontal: 10\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: \"transparent\",\n    marginBottom: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/SignUpScreen.js"],"names":["React","Component","Ionicons","colors","CustomActionButton","connect","firebase","SignUpScreen","onSignUp","state","email","password","firstName","lastName","setState","isLoading","auth","createUserWithEmailAndPassword","response","database","ref","child","user","uid","set","first_name","last_name","props","signIn","code","alert","console","log","flex","backgroundColor","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","borderColor","fontSize","fontWeight","color","marginTop","styles","textInput","bgTextInputDark","loginButtons","bgPrimary","mapDispatchToProps","dispatch","type","payload","signOut","create","container","bgMain","paddingTop","Platform","OS","height","borderWidth","marginHorizontal","marginBottom","paddingHorizontal","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  Platform,\n  ActivityIndicator,\n} from \"react-native\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../assets/colors\";\nimport CustomActionButton from \"../components/CustomTempButton\";\n\nimport { connect } from \"react-redux\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nclass SignUpScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      isLoading: false,\n    };\n  }\n\n  onSignUp = async () => {\n    if (\n      this.state.email &&\n      this.state.password &&\n      this.state.firstName &&\n      this.state.lastName\n    ) {\n      this.setState({ isLoading: true });\n      try {\n        const response = await firebase\n          .auth()\n          .createUserWithEmailAndPassword(\n            this.state.email,\n            this.state.password\n          );\n\n        if (response) {\n          this.setState({ isLoading: false });\n          const user = await firebase\n            .database()\n            .ref(\"Users\")\n            .child(response.user.uid)\n            .set({\n              email: response.user.email,\n              first_name: this.state.firstName,\n              last_name: this.state.lastName,\n              uid: response.user.uid,\n            });\n\n          //this.props.navigation.navigate(\"SecurityCheck\");\n          this.props.signIn(response.user);\n          //automatically signs in the user\n        }\n      } catch (error) {\n        this.setState({ isLoading: false });\n        if (error.code == \"auth/email-already-in-use\") {\n          alert(\"User already exists.Try loggin in\");\n        }\n        console.log(error);\n      }\n    } else {\n      alert(\"All fields are required to sign up\");\n    }\n  };\n\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        {this.state.isLoading ? (\n          <View\n            style={[\n              StyleSheet.absoluteFill,\n              {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                zIndex: 1000,\n                elevation: 1000,\n              },\n            ]}\n          >\n            <ActivityIndicator size=\"large\" color={colors.logoColor} />\n          </View>\n        ) : null}\n        <View\n          style={{\n            flex: 1,\n            borderColor: \"white\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Ionicons name=\"ios-nuclear\" size={150} color={colors.logoColor} />\n          <Text style={{ fontSize: 50, fontWeight: \"100\", color: \"green\" }}>\n            Trash Grav\n          </Text>\n        </View>\n\n        <View\n          style={{\n            flex: 1,\n            justifyContent: \"center\",\n            marginTop: 30,\n          }}\n        >\n          <TextInput\n            style={styles.textInput}\n            placeholder={\"First Name\"}\n            placeholderTextColor={colors.bgTextInputDark}\n            keyboardType=\"default\"\n            onChangeText={(firstName) => this.setState({ firstName })}\n          />\n          <TextInput\n            style={styles.textInput}\n            placeholder={\"Last Name\"}\n            placeholderTextColor={colors.bgTextInputDark}\n            keyboardType=\"default\"\n            onChangeText={(lastName) => this.setState({ lastName })}\n          />\n          <TextInput\n            style={styles.textInput}\n            placeholder={\"abc@example.com\"}\n            placeholderTextColor={colors.bgTextInputDark}\n            keyboardType=\"email-address\"\n            onChangeText={(email) => this.setState({ email })}\n          />\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"enter password\"\n            placeholderTextColor={colors.bgTextInputDark}\n            secureTextEntry\n            onChangeText={(password) => this.setState({ password })}\n          />\n          <View style={{ alignItems: \"center\" }}>\n            <CustomActionButton\n              style={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n              title=\"Sign Up\"\n              onPress={this.onSignUp}\n            >\n              <Text style={{ fontWeight: \"100\", color: \"green\" }}>\n                Sign Up Now!!\n              </Text>\n            </CustomActionButton>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (user) => dispatch({ type: \"SIGN_IN\", payload: user }),\n    signOut: () => dispatch({ type: \"SIGN_OUT\" }),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUpScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain,\n    paddingTop: Platform.OS == \"android\" ? 50 : 0,\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: \"black\",\n    paddingHorizontal: 10,\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: \"transparent\",\n    marginBottom: 10,\n    width: 200,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}