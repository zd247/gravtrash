{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/components/CustomTempButton.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Proptypes from \"prop-types\";\nimport colors from \"../assets/colors\";\n\nfunction getPosition(position) {\n  switch (position) {\n    case \"left\":\n      return {\n        position: \"absolute\",\n        left: 20,\n        bottom: 270\n      };\n\n    default:\n      return {\n        position: \"absolute\",\n        right: 20,\n        bottom: 270\n      };\n  }\n}\n\nvar CustomTempButton = function CustomTempButton(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      position = _ref.position;\n  var floatingActionButton = position ? getPosition(position) : [];\n  return React.createElement(TouchableOpacity, {\n    style: floatingActionButton,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.button, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nCustomTempButton.propTypes = {\n  onPress: Proptypes.func.isRequired,\n  children: Proptypes.element.isRequired,\n  style: Proptypes.oneOfType([Proptypes.object, Proptypes.array])\n};\nCustomTempButton.defaultProps = {\n  style: {}\n};\nexport default CustomTempButton;\nvar styles = StyleSheet.create({\n  button: {\n    width: 50,\n    backgroundColor: colors.bgError,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/components/CustomTempButton.js"],"names":["React","Proptypes","colors","getPosition","position","left","bottom","right","CustomTempButton","children","onPress","style","floatingActionButton","styles","button","propTypes","func","isRequired","element","oneOfType","object","array","defaultProps","StyleSheet","create","width","backgroundColor","bgError","height","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,UAAQA,QAAR;AACE,SAAK,MAAL;AACE,aAAO;AAAEA,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,MAAM,EAAE;AAA1C,OAAP;;AACF;AACE,aAAO;AAAEF,QAAAA,QAAQ,EAAE,UAAZ;AAAwBG,QAAAA,KAAK,EAAE,EAA/B;AAAmCD,QAAAA,MAAM,EAAE;AAA3C,OAAP;AAJJ;AAMD;;AAED,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfP,QAAe,QAAfA,QAAe;AACnE,MAAMQ,oBAAoB,GAAGR,QAAQ,GAAGD,WAAW,CAACC,QAAD,CAAd,GAA2B,EAAhE;AACA,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEQ,oBAAzB;AAA+C,IAAA,OAAO,EAAEF,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACG,MAAM,CAACC,MAAR,EAAgBH,KAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCF,QAAtC,CADF,CADF;AAKD,CAPD;;AASAD,gBAAgB,CAACO,SAAjB,GAA6B;AAC3BL,EAAAA,OAAO,EAAET,SAAS,CAACe,IAAV,CAAeC,UADG;AAE3BR,EAAAA,QAAQ,EAAER,SAAS,CAACiB,OAAV,CAAkBD,UAFD;AAG3BN,EAAAA,KAAK,EAAEV,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAACoB,KAA7B,CAApB;AAHoB,CAA7B;AAMAb,gBAAgB,CAACc,YAAjB,GAAgC;AAC9BX,EAAAA,KAAK,EAAE;AADuB,CAAhC;AAIA,eAAeH,gBAAf;AAEA,IAAMK,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,eAAe,EAAExB,MAAM,CAACyB,OAFlB;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,cAAc,EAAE;AALV;AADuB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Proptypes from \"prop-types\";\nimport colors from \"../assets/colors\";\n\nfunction getPosition(position) {\n  switch (position) {\n    case \"left\":\n      return { position: \"absolute\", left: 20, bottom: 270 };\n    default:\n      return { position: \"absolute\", right: 20, bottom: 270 };\n  }\n}\n\nconst CustomTempButton = ({ children, onPress, style, position }) => {\n  const floatingActionButton = position ? getPosition(position) : [];\n  return (\n    <TouchableOpacity style={floatingActionButton} onPress={onPress}>\n      <View style={[styles.button, style]}>{children}</View>\n    </TouchableOpacity>\n  );\n};\n\nCustomTempButton.propTypes = {\n  onPress: Proptypes.func.isRequired,\n  children: Proptypes.element.isRequired,\n  style: Proptypes.oneOfType([Proptypes.object, Proptypes.array]),\n};\n\nCustomTempButton.defaultProps = {\n  style: {},\n};\n\nexport default CustomTempButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    backgroundColor: colors.bgError,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\n//backgroundColor: colors.bgError,\n"]},"metadata":{},"sourceType":"module"}