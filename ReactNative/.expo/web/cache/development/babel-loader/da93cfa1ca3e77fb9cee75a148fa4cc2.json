{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport colors from \"../assets/colors\";\nimport { connect } from 'react-redux';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport Animated, { Easing } from 'react-native-reanimated';\nimport { TapGestureHandler, State } from 'react-native-gesture-handler';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Value = Animated.Value,\n    event = Animated.event,\n    block = Animated.block,\n    cond = Animated.cond,\n    eq = Animated.eq,\n    set = Animated.set,\n    Clock = Animated.Clock,\n    startClock = Animated.startClock,\n    stopClock = Animated.stopClock,\n    debug = Animated.debug,\n    timing = Animated.timing,\n    clockRunning = Animated.clockRunning,\n    interpolate = Animated.interpolate,\n    Extrapolate = Animated.Extrapolate;\n\nfunction runTiming(clock, value, dest) {\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    duration: 1000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease)\n  };\n  return block([cond(clockRunning(clock), 0, [set(state.finished, 0), set(state.time, 0), set(state.position, value), set(state.frameTime, 0), set(config.toValue, dest), startClock(clock)]), timing(clock, state, config), cond(state.finished, debug('stop clock', stopClock(clock))), state.position]);\n}\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n    _this.buttonOpacity = new Value(1);\n    _this.onStateChange = event([{\n      nativeEvent: function nativeEvent(_ref) {\n        var state = _ref.state;\n        return block([cond(eq(state, State.END), set(_this.buttonOpacity, runTiming(new Clock(), 1, 0)))]);\n      }\n    }]);\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 4\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      })) : null);\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: height,\n    backgroundColor: 'white',\n    justifyContent: 'flex-end'\n  },\n  buttonContainer: {\n    height: height / 3,\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: 'white',\n    height: 70,\n    marginHorizontal: 50,\n    borderRadius: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 20,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.2,\n    elevation: 2\n  },\n  closeButton: {\n    height: 40,\n    width: 40,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    top: -20,\n    left: width / 2 - 20,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.2,\n    elevation: 2\n  },\n  textInput: {\n    height: 50,\n    borderRadius: 25,\n    borderWidth: 0.5,\n    marginHorizontal: 20,\n    paddingLeft: 10,\n    marginVertical: 5,\n    borderColor: 'rgba(0,0,0,0.2)'\n  },\n  sendCodeText: {\n    alignSelf: 'center',\n    marginTop: 30,\n    marginEnd: 15\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","colors","connect","firebase","Animated","Easing","TapGestureHandler","State","Dimensions","get","width","height","Value","event","block","cond","eq","set","Clock","startClock","stopClock","debug","timing","clockRunning","interpolate","Extrapolate","runTiming","clock","value","dest","state","finished","position","time","frameTime","config","duration","toValue","easing","inOut","ease","LoginScreen","buttonOpacity","onStateChange","nativeEvent","END","flex","backgroundColor","isLoading","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","mapDispatchToProps","dispatch","signIn","user","type","payload","signOut","styles","create","container","buttonContainer","button","marginHorizontal","borderRadius","marginBottom","shadowOffset","shadowColor","shadowOpacity","closeButton","top","left","textInput","borderWidth","paddingLeft","marginVertical","borderColor","sendCodeText","alignSelf","marginTop","marginEnd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tActivityIndicator,\n\tDimensions,\n\tScrollView,\n\tKeyboard,\n\tTouchableNativeFeedback,\n\tTouchableWithoutFeedback,\n} from 'react-native'\n\nimport colors from '../assets/colors'\nimport { connect } from 'react-redux'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nimport Animated, { Easing } from 'react-native-reanimated'\nimport { TapGestureHandler, State } from 'react-native-gesture-handler'\n\nconst { width, height } = Dimensions.get('window')\nconst {\n\tValue,\n\tevent,\n\tblock,\n\tcond,\n\teq,\n\tset,\n\tClock,\n\tstartClock,\n\tstopClock,\n\tdebug,\n\ttiming,\n\tclockRunning,\n\tinterpolate,\n\tExtrapolate,\n} = Animated\n\nfunction runTiming(clock, value, dest) {\n\tconst state = {\n\t\tfinished: new Value(0),\n\t\tposition: new Value(0),\n\t\ttime: new Value(0),\n\t\tframeTime: new Value(0),\n\t}\n\n\tconst config = {\n\t\tduration: 1000,\n\t\ttoValue: new Value(0),\n\t\teasing: Easing.inOut(Easing.ease),\n\t}\n\n\treturn block([\n\t\tcond(clockRunning(clock), 0, [\n\t\t\tset(state.finished, 0),\n\t\t\tset(state.time, 0),\n\t\t\tset(state.position, value),\n\t\t\tset(state.frameTime, 0),\n\t\t\tset(config.toValue, dest),\n\t\t\tstartClock(clock),\n\t\t]),\n\t\ttiming(clock, state, config),\n\t\tcond(state.finished, debug('stop clock', stopClock(clock))),\n\t\tstate.position,\n\t])\n}\n\nclass LoginScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.buttonOpacity = new Value(1)\n\n\t\tthis.onStateChange = event([\n\t\t\t{\n\t\t\t\tnativeEvent: ({ state }) =>\n\t\t\t\t\tblock([\n\t\t\t\t\t\tcond(\n\t\t\t\t\t\t\teq(state, State.END),\n\t\t\t\t\t\t\tset(this.buttonOpacity, runTiming(new Clock(), 1, 0))\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t},\n\t\t])\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t</View>\n\t\t\t\t) : null}\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(LoginScreen)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\twidth: '100%',\n\t\theight: height,\n\t\tbackgroundColor: 'white',\n\t\tjustifyContent: 'flex-end',\n\t},\n\tbuttonContainer: {\n\t\theight: height / 3,\n\t\tjustifyContent: 'center',\n\t},\n\tbutton: {\n\t\tbackgroundColor: 'white',\n\t\theight: 70,\n\t\tmarginHorizontal: 50,\n\t\tborderRadius: 30,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tmarginBottom: 20,\n\t\tshadowOffset: { width: 2, height: 2 },\n\t\tshadowColor: 'black',\n\t\tshadowOpacity: 0.2,\n\t\televation: 2,\n\t},\n\tcloseButton: {\n\t\theight: 40,\n\t\twidth: 40,\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: 20,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tposition: 'absolute',\n\t\ttop: -20,\n\t\tleft: width / 2 - 20,\n\t\tshadowOffset: { width: 2, height: 2 },\n\t\tshadowColor: 'black',\n\t\tshadowOpacity: 0.2,\n\t\televation: 2,\n\t},\n\ttextInput: {\n\t\theight: 50,\n\t\tborderRadius: 25,\n\t\tborderWidth: 0.5,\n\t\tmarginHorizontal: 20,\n\t\tpaddingLeft: 10,\n\t\tmarginVertical: 5,\n\t\tborderColor: 'rgba(0,0,0,0.2)',\n\t},\n\tsendCodeText: {\n\t\talignSelf: 'center',\n\t\tmarginTop: 30,\n\t\tmarginEnd: 15,\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}