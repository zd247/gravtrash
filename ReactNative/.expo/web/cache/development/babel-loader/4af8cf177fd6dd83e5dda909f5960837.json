{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/TrashGrav.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport StartScreen from \"./screens/StartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUpScreen from \"./screens/SignUpScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport AdminHomeScreen from \"./screens/Admin/AdminHomeScreen\";\nimport CustomerCart from \"./screens/Customer/CustomerCart\";\nimport CustomerMapScreen from \"./screens/Customer/CustomerMapScreen\";\nimport SettingScreen from \"./screens/SettingScreen\";\nimport SecurityCheck from \"./screens/AppSwitchNavigator/SecurityCheck\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport DriverHomeScreen from \"./screens/Driver/DriverHomeScreen\";\nimport DriverMapScreen from \"./screens/Driver/DriverMapScreen\";\nimport CustomDrawerNavigator from \"./screens/DrawerNavigator/CustomDrawerNavigator\";\nimport CartContainer from \"./redux/containers/CartContainer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\nimport colors from \"./assets/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { connect } from \"react-redux\";\nimport * as firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./config/config\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar TrashGrav = function (_Component) {\n  _inherits(TrashGrav, _Component);\n\n  var _super = _createSuper(TrashGrav);\n\n  function TrashGrav(props) {\n    var _this;\n\n    _classCallCheck(this, TrashGrav);\n\n    _this = _super.call(this, props);\n\n    _this.checkIfLoggedIn = function () {\n      var unsubscribe;\n\n      try {\n        unsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n          if (user) {\n            _this.props.signIn(user);\n          } else {\n            console.log(\"No user Sign In\");\n\n            _this.props.signOut();\n          }\n\n          unsubscribe();\n        });\n      } catch (e) {\n        _this.props.signOut();\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TrashGrav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      {}\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, !this.props.auth.isSignedIn ? React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: colors.bgMain\n          },\n          headerTintColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"StartScreen\",\n        component: WelcomeScreen,\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen,\n        options: {\n          headerBackTitleVisible: false,\n          headerTransparent: true,\n          headerTitle: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"SignUpScreen\",\n        component: SignUpScreen,\n        options: {\n          headerBackTitleVisible: false,\n          headerTransparent: true,\n          headerTitle: \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      })) : !this.props.auth.isDriver ? React.createElement(CustomerDrawerNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }) : React.createElement(DriverDrawerNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return TrashGrav;\n}(Component);\n\nvar CustomerTabNavigator = function CustomerTabNavigator(_ref) {\n  var route = _ref.route;\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      style: {\n        backgroundColor: colors.bgMain\n      },\n      activeTintColor: colors.logoColor,\n      inactiveTintColor: colors.bgTextInput\n    },\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n\n          switch (route.name) {\n            case \"Recycle Item List\":\n              return React.createElement(CartContainer, {\n                color: color,\n                type: \"recycleItemList\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 20\n                }\n              });\n\n            case \"Recycle Cart\":\n              return React.createElement(CartContainer, {\n                color: color,\n                type: \"recycleCart\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 20\n                }\n              });\n          }\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Recycle Item List\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Recycle Cart\",\n    component: CustomerCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar getHeaderTitle = function getHeaderTitle(route) {\n  var routeName = route.state ? route.state.routes[route.state.index].name : \"Home\";\n\n  switch (routeName) {\n    case \"Home\":\n      return \"Recycle Item List\";\n\n    case \"Recycle Cart\":\n      return \"Recycle Cart\";\n\n    case \"CustomerMapScreen\":\n      return \"Book A Driver\";\n  }\n};\n\nvar CustomerStackNavigator = function CustomerStackNavigator(_ref4) {\n  var navigation = _ref4.navigation;\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: colors.bgMain\n      },\n      headerTintColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Recycle Item List\",\n    component: CustomerTabNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: \"Customer Map Screen\"\n    },\n    name: \"CustomerMapScreen\",\n    component: CustomerMapScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar CustomerDrawerNavigator = function CustomerDrawerNavigator() {\n  return React.createElement(ActionSheetProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 3\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerNavigator, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-home\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    name: \"Home\",\n    component: CustomerStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-person\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    name: \"User Profile\",\n    component: UserProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-settings\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    name: \"Setting\",\n    component: SettingScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-people\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    name: \"Admin\",\n    component: AdminHomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar DriverTabNavigator = function DriverTabNavigator(_ref5) {\n  var route = _ref5.route;\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      style: {\n        backgroundColor: colors.bgMain\n      },\n      activeTintColor: colors.logoColor,\n      inactiveTintColor: colors.bgTextInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Pick Up Request\",\n    component: DriverHomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Driver Map Screen\",\n    component: DriverMapScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar DriverDrawerNavigator = function DriverDrawerNavigator() {\n  return React.createElement(ActionSheetProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 3\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerNavigator, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 33\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-bicycle\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    name: \"Home\",\n    component: DriverTabNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-person\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    name: \"User Profile\",\n    component: UserProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Ionicons, {\n          name: \"ios-settings\",\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    name: \"Setting\",\n    component: SettingScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: \"SIGN_IN\",\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: \"SIGN_OUT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrashGrav);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    height: 70,\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.borderColor,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/TrashGrav.js"],"names":["React","Component","WelcomeScreen","StartScreen","LoginScreen","SignUpScreen","HomeScreen","UserProfileScreen","AdminHomeScreen","CustomerCart","CustomerMapScreen","SettingScreen","SecurityCheck","LoadingScreen","DriverHomeScreen","DriverMapScreen","CustomDrawerNavigator","CartContainer","NavigationContainer","createStackNavigator","HeaderTitle","createDrawerNavigator","createBottomTabNavigator","ActionSheetProvider","colors","Ionicons","connect","firebase","firebaseConfig","Stack","Drawer","Tab","TrashGrav","props","checkIfLoggedIn","unsubscribe","auth","onAuthStateChanged","user","signIn","console","log","signOut","e","state","isSignedIn","headerStyle","backgroundColor","bgMain","headerTintColor","headerShown","headerBackTitleVisible","headerTransparent","headerTitle","isDriver","CustomerTabNavigator","route","style","activeTintColor","logoColor","inactiveTintColor","bgTextInput","tabBarIcon","color","size","name","getHeaderTitle","routeName","routes","index","CustomerStackNavigator","navigation","title","CustomerDrawerNavigator","drawerIcon","DriverTabNavigator","DriverDrawerNavigator","mapStateToProps","mapDispatchToProps","dispatch","type","payload","styles","StyleSheet","create","container","flex","alignItems","justifyContent","header","height","borderBottomWidth","borderBottomColor","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport StartScreen from \"./screens/StartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUpScreen from \"./screens/SignUpScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport AdminHomeScreen from \"./screens/Admin/AdminHomeScreen\";\nimport CustomerCart from \"./screens/Customer/CustomerCart\";\nimport CustomerMapScreen from \"./screens/Customer/CustomerMapScreen\";\nimport SettingScreen from \"./screens/SettingScreen\";\nimport SecurityCheck from \"./screens/AppSwitchNavigator/SecurityCheck\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport DriverHomeScreen from \"./screens/Driver/DriverHomeScreen\";\nimport DriverMapScreen from \"./screens/Driver/DriverMapScreen\";\n\nimport CustomDrawerNavigator from \"./screens/DrawerNavigator/CustomDrawerNavigator\";\nimport CartContainer from \"./redux/containers/CartContainer\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { ActionSheetProvider } from \"@expo/react-native-action-sheet\";\n\nimport colors from \"./assets/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport { connect } from \"react-redux\";\n\nimport * as firebase from \"firebase/app\";\nimport { firebaseConfig } from \"./config/config\";\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\nclass TrashGrav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.checkIfLoggedIn();\n  }\n\n  checkIfLoggedIn = () => {\n    let unsubscribe;\n    try {\n      unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          this.props.signIn(user);\n        } else {\n          console.log(\"No user Sign In\");\n          this.props.signOut();\n        }\n        unsubscribe();\n      });\n    } catch (e) {\n      this.props.signOut();\n    }\n  };\n\n  render() {\n    {\n      /*if (this.props.auth.isLoading) {\n      return <LoadingScreen />;\n    } */\n    }\n    return (\n      <NavigationContainer>\n        {!this.props.auth.isSignedIn ? (\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: colors.bgMain,\n              },\n              headerTintColor: \"white\",\n            }}\n          >\n            <Stack.Screen\n              name=\"StartScreen\"\n              component={WelcomeScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"LoginScreen\"\n              component={LoginScreen}\n              options={{\n                headerBackTitleVisible: false,\n                headerTransparent: true,\n                headerTitle: \"\",\n              }}\n            />\n            <Stack.Screen\n              name=\"SignUpScreen\"\n              component={SignUpScreen}\n              options={{\n                headerBackTitleVisible: false,\n                headerTransparent: true,\n                headerTitle: \"\",\n              }}\n            />\n          </Stack.Navigator>\n        ) : !this.props.auth.isDriver ? (\n          <CustomerDrawerNavigator />\n        ) : (\n          <DriverDrawerNavigator />\n        )}\n      </NavigationContainer>\n    );\n  }\n}\n\nconst CustomerTabNavigator = ({ route }) => (\n  <Tab.Navigator\n    tabBarOptions={{\n      style: {\n        backgroundColor: colors.bgMain,\n      },\n      activeTintColor: colors.logoColor,\n      inactiveTintColor: colors.bgTextInput,\n    }}\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ color, size }) => {\n        switch (route.name) {\n          case \"Recycle Item List\":\n            return <CartContainer color={color} type=\"recycleItemList\" />;\n          case \"Recycle Cart\":\n            return <CartContainer color={color} type=\"recycleCart\" />;\n        }\n      },\n    })}\n  >\n    <Tab.Screen name=\"Recycle Item List\" component={HomeScreen} />\n    <Tab.Screen name=\"Recycle Cart\" component={CustomerCart} />\n  </Tab.Navigator>\n);\n\nconst getHeaderTitle = (route) => {\n  const routeName = route.state\n    ? route.state.routes[route.state.index].name\n    : \"Home\";\n\n  switch (routeName) {\n    case \"Home\":\n      return \"Recycle Item List\";\n    case \"Recycle Cart\":\n      return \"Recycle Cart\";\n    case \"CustomerMapScreen\":\n      return \"Book A Driver\";\n  }\n};\n\nconst CustomerStackNavigator = ({ navigation }) => (\n  <Stack.Navigator\n    screenOptions={{\n      headerStyle: {\n        backgroundColor: colors.bgMain,\n      },\n      headerTintColor: \"white\",\n    }}\n  >\n    <Stack.Screen\n      options={{ headerShown: false }}\n      name=\"Recycle Item List\"\n      component={CustomerTabNavigator}\n    />\n\n    <Stack.Screen\n      options={{ title: \"Customer Map Screen\" }}\n      name=\"CustomerMapScreen\"\n      component={CustomerMapScreen}\n    />\n  </Stack.Navigator>\n);\n\nconst CustomerDrawerNavigator = () => (\n  <ActionSheetProvider>\n    <Drawer.Navigator\n      drawerContent={(props) => <CustomDrawerNavigator {...props} />}\n    >\n      <Drawer.Screen\n        options={{ drawerIcon: () => <Ionicons name=\"ios-home\" size={24} /> }}\n        name=\"Home\"\n        component={CustomerStackNavigator}\n      />\n      <Drawer.Screen\n        options={{ drawerIcon: () => <Ionicons name=\"ios-person\" size={24} /> }}\n        name=\"User Profile\"\n        component={UserProfileScreen}\n      />\n      <Drawer.Screen\n        options={{\n          drawerIcon: () => <Ionicons name=\"ios-settings\" size={24} />,\n        }}\n        name=\"Setting\"\n        component={SettingScreen}\n      />\n      <Drawer.Screen\n        options={{ drawerIcon: () => <Ionicons name=\"ios-people\" size={24} /> }}\n        name=\"Admin\"\n        component={AdminHomeScreen}\n      />\n    </Drawer.Navigator>\n  </ActionSheetProvider>\n);\n\nconst DriverTabNavigator = ({ route }) => (\n  <Tab.Navigator\n    tabBarOptions={{\n      style: {\n        backgroundColor: colors.bgMain,\n      },\n      activeTintColor: colors.logoColor,\n      inactiveTintColor: colors.bgTextInput,\n    }}\n  >\n    <Tab.Screen name=\"Pick Up Request\" component={DriverHomeScreen} />\n    <Tab.Screen name=\"Driver Map Screen\" component={DriverMapScreen} />\n  </Tab.Navigator>\n);\n\nconst DriverDrawerNavigator = () => (\n  <ActionSheetProvider>\n    <Drawer.Navigator\n      drawerContent={(props) => <CustomDrawerNavigator {...props} />}\n    >\n      <Drawer.Screen\n        options={{\n          drawerIcon: () => <Ionicons name=\"ios-bicycle\" size={24} />,\n        }}\n        name=\"Home\"\n        component={DriverTabNavigator}\n      />\n      <Drawer.Screen\n        options={{ drawerIcon: () => <Ionicons name=\"ios-person\" size={24} /> }}\n        name=\"User Profile\"\n        component={UserProfileScreen}\n      />\n      <Drawer.Screen\n        options={{\n          drawerIcon: () => <Ionicons name=\"ios-settings\" size={24} />,\n        }}\n        name=\"Setting\"\n        component={SettingScreen}\n      />\n    </Drawer.Navigator>\n  </ActionSheetProvider>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (user) => dispatch({ type: \"SIGN_IN\", payload: user }),\n    signOut: () => dispatch({ type: \"SIGN_OUT\" }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrashGrav);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  header: {\n    height: 70,\n    borderBottomWidth: 0.5,\n    borderBottomColor: colors.borderColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\n//git push --set-upstream origin master\n"]},"metadata":{},"sourceType":"module"}