{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/components/PopUpModal.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport colors from \"../assets/colors\";\n\nvar PopUpModal = function (_React$Component) {\n  _inherits(PopUpModal, _React$Component);\n\n  var _super = _createSuper(PopUpModal);\n\n  function PopUpModal(props) {\n    _classCallCheck(this, PopUpModal);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(PopUpModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Modal, {\n        transparent: true,\n        visible: this.props.visible,\n        animationType: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: styles.modalContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 5\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }\n      }, this.props.children)), React.createElement(CustomActionButton, {\n        style: [styles.button, {\n          backgroundColor: 'transparent'\n        }],\n        onPress: function onPress() {\n          _this.setState({\n            showTermsPolicy: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          color: colors.bgUserLogin\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }\n      }, \"Close\")));\n    }\n  }]);\n\n  return PopUpModal;\n}(React.Component);\n\nexport { PopUpModal as default };\nvar styles = StyleSheet.create({\n  modalContainer: {\n    backgroundColor: colors.bgPrimary,\n    margin: 50,\n    paddingTop: 30,\n    paddingHorizontal: 30,\n    paddingBottom: 10,\n    borderRadius: 10,\n    flex: 1\n  },\n  button: {\n    borderColor: colors.bgPrimary,\n    borderWidth: 0.5,\n    borderRadius: 20,\n    marginBottom: 10,\n    alignSelf: 'center',\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/components/PopUpModal.js"],"names":["React","colors","PopUpModal","props","visible","styles","modalContainer","flex","children","button","backgroundColor","setState","showTermsPolicy","fontWeight","color","bgUserLogin","Component","StyleSheet","create","bgPrimary","margin","paddingTop","paddingHorizontal","paddingBottom","borderRadius","borderColor","borderWidth","marginBottom","alignSelf","width"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,MAAP;;IAEqBC,U;;;;;AACpB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACZA,KADY;AAElB;;;;6BAEQ;AAAA;;AACR,aACC,oBAAC,KAAD;AACC,QAAA,WAAW,EAAE,IADd;AAEC,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWC,OAFrB;AAGC,QAAA,aAAa,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKJ,KAAL,CAAWK,QAA5C,CADD,CAJD,EAOC,oBAAC,kBAAD;AACC,QAAA,KAAK,EAAE,CAACH,MAAM,CAACI,MAAR,EAAgB;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAhB,CADR;AAEC,QAAA,OAAO,EAAE,mBAAM;AACd,UAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,eAAe,EAAE;AAAnB,WAAd;AACA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,oBAAC,IAAD;AACC,QAAA,KAAK,EAAE;AACNC,UAAAA,UAAU,EAAE,MADN;AAENC,UAAAA,KAAK,EAAEb,MAAM,CAACc;AAFR,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALD,CAPD,CADD;AAuBA;;;;EA7BsCf,KAAK,CAACgB,S;;SAAzBd,U;AAgCrB,IAAMG,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAChCZ,EAAAA,cAAc,EAAE;AACfI,IAAAA,eAAe,EAAET,MAAM,CAACkB,SADT;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfC,IAAAA,UAAU,EAAE,EAHG;AAIfC,IAAAA,iBAAiB,EAAE,EAJJ;AAKfC,IAAAA,aAAa,EAAE,EALA;AAMfC,IAAAA,YAAY,EAAE,EANC;AAOfjB,IAAAA,IAAI,EAAE;AAPS,GADgB;AAUhCE,EAAAA,MAAM,EAAE;AACPgB,IAAAA,WAAW,EAAExB,MAAM,CAACkB,SADb;AAEPO,IAAAA,WAAW,EAAE,GAFN;AAGPF,IAAAA,YAAY,EAAE,EAHP;AAIPG,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,SAAS,EAAE,QALJ;AAMPC,IAAAA,KAAK,EAAE;AANA;AAVwB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { View, Text, Modal, ScrollView, StyleSheet, Button } from 'react-native'\nimport colors from '../assets/colors'\n\nexport default class PopUpModal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\ttransparent={true}\n\t\t\t\tvisible={this.props.visible}\n\t\t\t\tanimationType='fade'>\n\t\t\t\t<View style={styles.modalContainer}>\n\t\t\t\t\t<ScrollView style={{ flex: 1 }}>{this.props.children}</ScrollView>\n\t\t\t\t</View>\n\t\t\t\t<CustomActionButton\n\t\t\t\t\tstyle={[styles.button, { backgroundColor: 'transparent' }]}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tthis.setState({ showTermsPolicy: false })\n\t\t\t\t\t}}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\tcolor: colors.bgUserLogin,\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Text>\n\t\t\t\t</CustomActionButton>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tmodalContainer: {\n\t\tbackgroundColor: colors.bgPrimary,\n\t\tmargin: 50,\n\t\tpaddingTop: 30,\n\t\tpaddingHorizontal: 30,\n\t\tpaddingBottom: 10,\n\t\tborderRadius: 10,\n\t\tflex: 1,\n\t},\n\tbutton: {\n\t\tborderColor: colors.bgPrimary,\n\t\tborderWidth: 0.5,\n\t\tborderRadius: 20,\n\t\tmarginBottom: 10,\n\t\talignSelf: 'center',\n\t\twidth: '80%',\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}