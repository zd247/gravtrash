{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../assets/colors\";\nimport { connect } from \"react-redux\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      })) : null, React.createElement(View, {\n        style: {\n          flex: 1,\n          borderColor: \"white\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-nuclear\",\n        size: 150,\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          fontWeight: \"100\",\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"Trash Grav\")), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"abc@example.com\",\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"enter password\",\n        placeholderTextColor: colors.bgTextInputDark,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Login in\",\n        onPress: this.onSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"100\",\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Login\")), React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Sign Up\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"SignUpScreen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"100\",\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: \"SIGN_IN\",\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: \"SIGN_OUT\"\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: \"black\",\n    paddingHorizontal: 10\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: \"transparent\",\n    marginBottom: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/home/zd/projects/trashgrav-SEPM/ReactNative/screens/LoginScreen.js"],"names":["React","Component","Ionicons","colors","connect","firebase","LoginScreen","state","isLoading","flex","backgroundColor","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","borderColor","fontSize","fontWeight","color","styles","textInput","bgTextInputDark","email","setState","password","marginTop","loginButtons","bgPrimary","onSignIn","props","navigation","navigate","mapDispatchToProps","dispatch","signIn","user","type","payload","signOut","create","container","bgMain","height","borderWidth","marginHorizontal","marginBottom","paddingHorizontal","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../assets/colors\";\n\nimport { connect } from \"react-redux\";\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nclass LoginScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        {this.state.isLoading ? (\n          <View\n            style={[\n              StyleSheet.absoluteFill,\n              {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                zIndex: 1000,\n                elevation: 1000,\n              },\n            ]}\n          >\n            <ActivityIndicator size=\"large\" color={colors.logoColor} />\n          </View>\n        ) : null}\n        <View\n          style={{\n            flex: 1,\n            borderColor: \"white\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Ionicons name=\"ios-nuclear\" size={150} color={colors.logoColor} />\n          <Text style={{ fontSize: 50, fontWeight: \"100\", color: \"green\" }}>\n            Trash Grav\n          </Text>\n        </View>\n        <TextInput\n          style={styles.textInput}\n          placeholder={\"abc@example.com\"}\n          placeholderTextColor={colors.bgTextInputDark}\n          keyboardType=\"email-address\"\n          onChangeText={(email) => this.setState({ email })}\n        />\n        <TextInput\n          style={styles.textInput}\n          placeholder=\"enter password\"\n          placeholderTextColor={colors.bgTextInputDark}\n          secureTextEntry\n          onChangeText={(password) => this.setState({ password })}\n        />\n        <View style={{ flex: 1, alignItems: \"center\", marginTop: 30 }}>\n          <CustomActionButton\n            style={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n            title=\"Login in\"\n            onPress={this.onSignIn}\n          >\n            <Text style={{ fontWeight: \"100\", color: \"green\" }}>Login</Text>\n          </CustomActionButton>\n\n          <CustomActionButton\n            style={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n            title=\"Sign Up\"\n            onPress={() => this.props.navigation.navigate(\"SignUpScreen\")}\n          >\n            <Text style={{ fontWeight: \"100\", color: \"green\" }}>Sign Up</Text>\n          </CustomActionButton>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (user) => dispatch({ type: \"SIGN_IN\", payload: user }),\n    signOut: () => dispatch({ type: \"SIGN_OUT\" }),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain,\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: \"black\",\n    paddingHorizontal: 10,\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: \"transparent\",\n    marginBottom: 10,\n    width: 200,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}