{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/WelcomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport colors from \"../assets/colors\";\nimport CustomActionButton from \"../components/CustomTempButton\";\nimport { connect } from 'react-redux';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar WelcomeScreen = function (_Component) {\n  _inherits(WelcomeScreen, _Component);\n\n  var _super = _createSuper(WelcomeScreen);\n\n  function WelcomeScreen() {\n    var _this;\n\n    _classCallCheck(this, WelcomeScreen);\n\n    _this = _super.call(this);\n\n    _this.onSignIn = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.email && _this.state.password)) {\n                _context.next = 18;\n                break;\n              }\n\n              _this.setState({\n                isLoading: true\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password));\n\n            case 5:\n              response = _context.sent;\n\n              if (response) {\n                _this.setState({\n                  isLoading: false\n                });\n\n                console.log(response.user);\n\n                _this.props.signIn(response.user);\n              }\n\n              _context.next = 18;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                isLoading: false\n              });\n\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 15 : _context.t1 === 'auth/invalid-email' ? 17 : 18;\n              break;\n\n            case 15:\n              alert('A user with that email does not exist. Try signing Up');\n              return _context.abrupt(\"break\", 18);\n\n            case 17:\n              alert('Please enter an email address');\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 9]], Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(WelcomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 4\n        }\n      }, React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }\n      }), this.state.isLoading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 1000,\n          elevation: 1000\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      })) : null, React.createElement(View, {\n        style: {\n          flex: 1,\n          borderColor: 'white',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-nuclear\",\n        size: 150,\n        color: colors.logoColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 50,\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }\n      }, \"Trash Grav\")), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: 'abc@example.com',\n        placeholderTextColor: colors.bgTextInputDark,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"enter password\",\n        placeholderTextColor: colors.bgTextInputDark,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }\n      }, React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Login in\",\n        onPress: this.onSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, \"Login\")), React.createElement(CustomActionButton, {\n        style: [styles.loginButtons, {\n          borderColor: colors.bgPrimary\n        }],\n        title: \"Sign Up\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SignUpScreen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: '100',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, \"Sign Up\"))), React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return WelcomeScreen;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: 'SIGN_IN',\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(WelcomeScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.bgMain\n  },\n  textInput: {\n    height: 50,\n    borderWidth: 0.5,\n    borderColor: colors.borderColor,\n    marginHorizontal: 40,\n    marginBottom: 10,\n    color: 'black',\n    paddingHorizontal: 10\n  },\n  loginButtons: {\n    borderWidth: 0.5,\n    backgroundColor: 'transparent',\n    marginBottom: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/WelcomeScreen.js"],"names":["React","Component","Ionicons","colors","CustomActionButton","connect","firebase","WelcomeScreen","onSignIn","state","email","password","setState","isLoading","auth","signInWithEmailAndPassword","response","console","log","user","props","signIn","code","alert","flex","backgroundColor","StyleSheet","absoluteFill","alignItems","justifyContent","zIndex","elevation","logoColor","borderColor","fontSize","fontWeight","color","styles","textInput","bgTextInputDark","marginTop","loginButtons","bgPrimary","navigation","navigate","mapDispatchToProps","dispatch","type","payload","signOut","create","container","bgMain","height","borderWidth","marginHorizontal","marginBottom","paddingHorizontal","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tActivityIndicator,\n\tSafeAreaView,\n} from 'react-native'\n\nimport { Ionicons } from '@expo/vector-icons'\nimport colors from '../assets/colors'\nimport CustomActionButton from '../components/CustomTempButton'\n\nimport { connect } from 'react-redux'\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nclass WelcomeScreen extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tisLoading: false,\n\t\t}\n\t}\n\n\tonSignIn = async () => {\n\t\tif (this.state.email && this.state.password) {\n\t\t\tthis.setState({ isLoading: true })\n\t\t\ttry {\n\t\t\t\tconst response = await firebase\n\t\t\t\t\t.auth()\n\t\t\t\t\t.signInWithEmailAndPassword(this.state.email, this.state.password)\n\t\t\t\tif (response) {\n\t\t\t\t\tthis.setState({ isLoading: false })\n\t\t\t\t\tconsole.log(response.user)\n\t\t\t\t\tthis.props.signIn(response.user)\n\t\t\t\t\t//this.props.navigation.navigate(\"HomeScreen\");\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.setState({ isLoading: false })\n\t\t\t\tswitch (error.code) {\n\t\t\t\t\tcase 'auth/user-not-found':\n\t\t\t\t\t\talert('A user with that email does not exist. Try signing Up')\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'auth/invalid-email':\n\t\t\t\t\t\talert('Please enter an email address')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style={{ flex: 1, backgroundColor: 'white' }}>\n\t\t\t\t<SafeAreaView />\n\t\t\t\t{this.state.isLoading ? (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tStyleSheet.absoluteFill,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\tzIndex: 1000,\n\t\t\t\t\t\t\t\televation: 1000,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}>\n\t\t\t\t\t\t<ActivityIndicator size='large' color={colors.logoColor} />\n\t\t\t\t\t</View>\n\t\t\t\t) : null}\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\tborderColor: 'white',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t<Ionicons name='ios-nuclear' size={150} color={colors.logoColor} />\n\t\t\t\t\t<Text style={{ fontSize: 50, fontWeight: '100', color: 'green' }}>\n\t\t\t\t\t\tTrash Grav\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tplaceholder={'abc@example.com'}\n\t\t\t\t\tplaceholderTextColor={colors.bgTextInputDark}\n\t\t\t\t\tkeyboardType='email-address'\n\t\t\t\t\tonChangeText={email => this.setState({ email })}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.textInput}\n\t\t\t\t\tplaceholder='enter password'\n\t\t\t\t\tplaceholderTextColor={colors.bgTextInputDark}\n\t\t\t\t\tsecureTextEntry\n\t\t\t\t\tonChangeText={password => this.setState({ password })}\n\t\t\t\t/>\n\t\t\t\t<View style={{ flex: 1, alignItems: 'center', marginTop: 30 }}>\n\t\t\t\t\t<CustomActionButton\n\t\t\t\t\t\tstyle={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n\t\t\t\t\t\ttitle='Login in'\n\t\t\t\t\t\tonPress={this.onSignIn}>\n\t\t\t\t\t\t<Text style={{ fontWeight: '100', color: 'green' }}>Login</Text>\n\t\t\t\t\t</CustomActionButton>\n\n\t\t\t\t\t<CustomActionButton\n\t\t\t\t\t\tstyle={[styles.loginButtons, { borderColor: colors.bgPrimary }]}\n\t\t\t\t\t\ttitle='Sign Up'\n\t\t\t\t\t\tonPress={() => this.props.navigation.navigate('SignUpScreen')}>\n\t\t\t\t\t\t<Text style={{ fontWeight: '100', color: 'green' }}>Sign Up</Text>\n\t\t\t\t\t</CustomActionButton>\n\t\t\t\t</View>\n\t\t\t\t<SafeAreaView />\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tsignIn: user => dispatch({ type: 'SIGN_IN', payload: user }),\n\t\tsignOut: () => dispatch({ type: 'SIGN_OUT' }),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(WelcomeScreen)\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: colors.bgMain,\n\t},\n\ttextInput: {\n\t\theight: 50,\n\t\tborderWidth: 0.5,\n\t\tborderColor: colors.borderColor,\n\t\tmarginHorizontal: 40,\n\t\tmarginBottom: 10,\n\t\tcolor: 'black',\n\t\tpaddingHorizontal: 10,\n\t},\n\tloginButtons: {\n\t\tborderWidth: 0.5,\n\t\tbackgroundColor: 'transparent',\n\t\tmarginBottom: 10,\n\t\twidth: 200,\n\t},\n})\n"]},"metadata":{},"sourceType":"module"}