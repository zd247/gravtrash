{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/DrawerNavigator/CustomDrawerNavigator.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { title } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DrawerItemList, DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\nimport colors from \"../../assets/colors\";\nimport { connect } from \"react-redux\";\nimport Animated from \"react-native-reanimated\";\n\nvar CustomDrawerNavigator = function (_Component) {\n  _inherits(CustomDrawerNavigator, _Component);\n\n  var _super = _createSuper(CustomDrawerNavigator);\n\n  function CustomDrawerNavigator() {\n    var _this;\n\n    _classCallCheck(this, CustomDrawerNavigator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.translateX = function (props) {\n      var temp = Animated.interpolate(props.progress, {\n        inputRange: [0, 0.5, 0.7, 0.8, 1],\n        outputRange: [-100, -85, -70, -45, 0]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomDrawerNavigator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DrawerContentScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.userInfoSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, this.props.recycleItemList.user.image ? React.createElement(Image, {\n        source: {\n          uri: this.props.recycleItemList.user.image\n        },\n        style: styles.image,\n        indicatorProps: {\n          size: 40,\n          borderWidth: 0,\n          color: colors.logoColor,\n          unfilledColor: \"rgba(200,200,200,0.2)\"\n        },\n        imageStyle: {\n          borderRadius: 35\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }) : React.createElement(Image, {\n        source: require(\"../../assets/icon.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.props.recycleItemList.user.first_name, \" \", this.props.recycleItemList.user.last_name)), React.createElement(DrawerItemList, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return CustomDrawerNavigator;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recycleItemList: state.recycleItemList,\n    currentUser: state.auth.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(user) {\n      return dispatch({\n        type: \"SIGN_IN\",\n        payload: user\n      });\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: \"SIGN_OUT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomDrawerNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  drawerContent: {\n    flex: 1\n  },\n  userInfoSection: {\n    height: 180,\n    backgroundColor: colors.bgMain,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    backgroundColor: \"transparent\",\n    fontSize: 22,\n    fontWeight: \"200\",\n    color: \"white\"\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  section: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginRight: 15\n  },\n  paragraph: {\n    fontWeight: \"bold\",\n    marginRight: 3\n  },\n  drawerSection: {\n    marginTop: 15\n  },\n  preference: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  },\n  listItemContainer: {\n    minHeight: 100,\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    alignItems: \"center\"\n  },\n  imageContainer: {\n    flex: 1,\n    borderColor: \"white\",\n    maxHeight: 150,\n    marginBottom: 50\n  },\n  image: {\n    flex: 1,\n    height: null,\n    width: 150,\n    borderRadius: 150,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/screens/DrawerNavigator/CustomDrawerNavigator.js"],"names":["React","Component","title","DrawerItemList","DrawerContentScrollView","DrawerItem","colors","connect","Animated","CustomDrawerNavigator","translateX","props","temp","interpolate","progress","inputRange","outputRange","styles","userInfoSection","flex","recycleItemList","user","image","uri","size","borderWidth","color","logoColor","unfilledColor","borderRadius","require","first_name","last_name","mapStateToProps","state","currentUser","auth","mapDispatchToProps","dispatch","signIn","type","payload","signOut","StyleSheet","create","container","alignItems","justifyContent","drawerContent","height","backgroundColor","bgMain","fontSize","fontWeight","caption","lineHeight","row","marginTop","flexDirection","section","marginRight","paragraph","drawerSection","preference","paddingVertical","paddingHorizontal","listItemContainer","minHeight","imageContainer","borderColor","maxHeight","marginBottom","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  SafeAreaView,\n  Platform,\n  TouchableOpacity,\n  title,\n  Image,\n} from \"react-native\";\n\nimport {\n  DrawerItemList,\n  DrawerContentScrollView,\n  DrawerItem,\n} from \"@react-navigation/drawer\";\n\nimport colors from \"../../assets/colors\";\nimport { connect } from \"react-redux\";\nimport Animated from \"react-native-reanimated\";\n\nclass CustomDrawerNavigator extends Component {\n  translateX = (props) => {\n    const temp = Animated.interpolate(props.progress, {\n      inputRange: [0, 0.5, 0.7, 0.8, 1],\n      outputRange: [-100, -85, -70, -45, 0],\n    });\n  };\n\n  render() {\n    return (\n      <DrawerContentScrollView>\n        <Animated.View\n        //@ts-ignore\n        //style={[styles.drawerContent]}\n        >\n          <View style={styles.userInfoSection}>\n            <TouchableOpacity disabled={true} style={{ flex: 1 }}>\n              {this.props.recycleItemList.user.image ? (\n                <Image\n                  source={{ uri: this.props.recycleItemList.user.image }}\n                  style={styles.image}\n                  // indicator={ProgressPie}\n                  indicatorProps={{\n                    size: 40,\n                    borderWidth: 0,\n                    color: colors.logoColor,\n                    unfilledColor: \"rgba(200,200,200,0.2)\",\n                  }}\n                  imageStyle={{ borderRadius: 35 }}\n                />\n              ) : (\n                <Image\n                  source={require(\"../../assets/icon.png\")}\n                  style={styles.image}\n                />\n              )}\n            </TouchableOpacity>\n            <Text style={styles.title}>\n              {this.props.recycleItemList.user.first_name}{\" \"}\n              {this.props.recycleItemList.user.last_name}\n            </Text>\n          </View>\n          <DrawerItemList {...this.props} />\n        </Animated.View>\n      </DrawerContentScrollView>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recycleItemList: state.recycleItemList,\n    currentUser: state.auth.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (user) => dispatch({ type: \"SIGN_IN\", payload: user }),\n    signOut: () => dispatch({ type: \"SIGN_OUT\" }),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomDrawerNavigator);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  drawerContent: {\n    flex: 1,\n  },\n  userInfoSection: {\n    height: 180,\n    backgroundColor: colors.bgMain,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    //paddingTop: Platform.OS == \"android\" ? 20 : 0,\n  },\n  title: {\n    backgroundColor: \"transparent\",\n    fontSize: 22,\n    fontWeight: \"200\",\n    color: \"white\",\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14,\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  section: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginRight: 15,\n  },\n  paragraph: {\n    fontWeight: \"bold\",\n    marginRight: 3,\n  },\n  drawerSection: {\n    marginTop: 15,\n  },\n  preference: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  listItemContainer: {\n    minHeight: 100,\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n  },\n  imageContainer: {\n    flex: 1,\n    borderColor: \"white\",\n    maxHeight: 150,\n    marginBottom: 50,\n  },\n  image: {\n    flex: 1,\n    height: null,\n    width: 150,\n    borderRadius: 150,\n    alignSelf: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}