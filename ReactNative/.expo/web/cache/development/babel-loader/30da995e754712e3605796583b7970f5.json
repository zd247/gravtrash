{"ast":null,"code":"var _jsxFileName = \"/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/node_modules/react-native-scrollable-tab-view/ScrollableTabBar.js\";\n\nvar React = require('react');\n\nvar _ReactNative = ReactNative = require('react-native'),\n    ViewPropTypes = _ReactNative.ViewPropTypes;\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar _ReactNative2 = ReactNative,\n    View = _ReactNative2.View,\n    Animated = _ReactNative2.Animated,\n    StyleSheet = _ReactNative2.StyleSheet,\n    ScrollView = _ReactNative2.ScrollView,\n    Text = _ReactNative2.Text,\n    Platform = _ReactNative2.Platform,\n    Dimensions = _ReactNative2.Dimensions;\n\nvar Button = require(\"./Button\");\n\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar ScrollableTabBar = createReactClass({\n  displayName: \"ScrollableTabBar\",\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    textStyle: Text.propTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {}\n    };\n  },\n  getInitialState: function getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n  updateView: function updateView(offset) {\n    var position = Math.floor(offset.value);\n    var pageOffset = offset.value % 1;\n    var tabCount = this.props.tabs.length;\n    var lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n  necessarilyMeasurementsCompleted: function necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n  },\n  updateTabPanel: function updateTabPanel(position, pageOffset) {\n    var containerWidth = this._containerMeasurements.width;\n    var tabWidth = this._tabsMeasurements[position].width;\n    var nextTabMeasurements = this._tabsMeasurements[position + 1];\n    var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    var tabOffset = this._tabsMeasurements[position].left;\n    var absolutePageOffset = pageOffset * tabWidth;\n    var newScrollX = tabOffset + absolutePageOffset;\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    } else {\n      var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n\n      this._scrollView.scrollTo({\n        x: newScrollX,\n        y: 0,\n        animated: false\n      });\n    }\n  },\n  updateTabUnderline: function updateTabUnderline(position, pageOffset, tabCount) {\n    var lineLeft = this._tabsMeasurements[position].left;\n    var lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      var nextTabLeft = this._tabsMeasurements[position + 1].left;\n      var nextTabRight = this._tabsMeasurements[position + 1].right;\n      var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n  renderTab: function renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {\n    var _this$props = this.props,\n        activeTextColor = _this$props.activeTextColor,\n        inactiveTextColor = _this$props.inactiveTextColor,\n        textStyle = _this$props.textStyle;\n    var textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    var fontWeight = isTabActive ? 'bold' : 'normal';\n    return React.createElement(Button, {\n      key: name + \"_\" + page,\n      accessible: true,\n      accessibilityLabel: name,\n      accessibilityTraits: \"button\",\n      onPress: function onPress() {\n        return onPressHandler(page);\n      },\n      onLayout: onLayoutHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: [styles.tab, this.props.tabStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [{\n        color: textColor,\n        fontWeight: fontWeight\n      }, textStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, name)));\n  },\n  measureTab: function measureTab(page, event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        x = _event$nativeEvent$la.x,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n    this._tabsMeasurements[page] = {\n      left: x,\n      right: x + width,\n      width: width,\n      height: height\n    };\n    this.updateView({\n      value: this.props.scrollValue.__getValue()\n    });\n  },\n  render: function render() {\n    var _this = this;\n\n    var tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: 'navy',\n      bottom: 0\n    };\n    var dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n    return React.createElement(View, {\n      style: [styles.container, {\n        backgroundColor: this.props.backgroundColor\n      }, this.props.style],\n      onLayout: this.onContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 12\n      }\n    }, React.createElement(ScrollView, {\n      ref: function ref(scrollView) {\n        _this._scrollView = scrollView;\n      },\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      directionalLockEnabled: true,\n      bounces: false,\n      scrollsToTop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.tabs, {\n        width: this.state._containerWidth\n      }, this.props.tabsContainerStyle],\n      ref: 'tabContainer',\n      onLayout: this.onTabContainerLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, this.props.tabs.map(function (name, page) {\n      var isTabActive = _this.props.activeTab === page;\n      var renderTab = _this.props.renderTab || _this.renderTab;\n      return renderTab(name, page, isTabActive, _this.props.goToPage, _this.measureTab.bind(_this, page));\n    }), React.createElement(Animated.View, {\n      style: [tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }))));\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    if (JSON.stringify(prevProps.tabs) !== JSON.stringify(this.props.tabs) && this.state._containerWidth) {\n      this.setState({\n        _containerWidth: null\n      });\n    }\n  },\n  onTabContainerLayout: function onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    var width = this._tabContainerMeasurements.width;\n\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n\n    this.setState({\n      _containerWidth: width\n    });\n    this.updateView({\n      value: this.props.scrollValue.__getValue()\n    });\n  },\n  onContainerLayout: function onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({\n      value: this.props.scrollValue.__getValue()\n    });\n  }\n});\nmodule.exports = ScrollableTabBar;\nvar styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});","map":{"version":3,"sources":["/Users/ThanhPhan/Programming/ReactNative/trashgrav-SEPM/ReactNative/node_modules/react-native-scrollable-tab-view/ScrollableTabBar.js"],"names":["React","require","ReactNative","ViewPropTypes","PropTypes","createReactClass","View","Animated","StyleSheet","ScrollView","Text","Platform","Dimensions","Button","WINDOW_WIDTH","get","width","ScrollableTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","scrollOffset","style","tabStyle","tabsContainerStyle","textStyle","renderTab","underlineStyle","onScroll","getDefaultProps","getInitialState","_tabsMeasurements","_leftTabUnderline","Value","_widthTabUnderline","_containerWidth","componentDidMount","props","scrollValue","addListener","updateView","offset","position","Math","floor","value","pageOffset","tabCount","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","isLastTab","_tabContainerMeasurements","_containerMeasurements","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","left","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","x","y","animated","rightBoundScroll","lineLeft","lineRight","right","nextTabLeft","nextTabRight","newLineLeft","newLineRight","state","setValue","name","page","isTabActive","onPressHandler","onLayoutHandler","textColor","fontWeight","styles","tab","color","measureTab","event","nativeEvent","layout","height","__getValue","render","tabUnderlineStyle","bottom","dynamicTabUnderline","container","onContainerLayout","scrollView","onTabContainerLayout","map","bind","componentDidUpdate","prevProps","JSON","stringify","setState","e","module","exports","create","alignItems","justifyContent","paddingLeft","paddingRight","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","sourcesContent":["const React = require('react');\nconst { ViewPropTypes } = ReactNative = require('react-native');\nconst PropTypes = require('prop-types');\nconst createReactClass = require('create-react-class');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Text,\n  Platform,\n  Dimensions,\n} = ReactNative;\nconst Button = require('./Button');\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    textStyle: Text.propTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func,\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: null,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null,\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements;\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    } else {\n      const rightBoundScroll = this._tabContainerMeasurements.width - (this._containerMeasurements.width);\n      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });\n    }\n\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft = (pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft);\n      const newLineRight = (pageOffset * nextTabRight + (1 - pageOffset) * lineRight);\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {\n    const { activeTextColor, inactiveTextColor, textStyle, } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    return <Button\n      key={`${name}_${page}`}\n      accessible={true}\n      accessibilityLabel={name}\n      accessibilityTraits='button'\n      onPress={() => onPressHandler(page)}\n      onLayout={onLayoutHandler}\n    >\n      <View style={[styles.tab, this.props.tabStyle, ]}>\n        <Text style={[{color: textColor, fontWeight, }, textStyle, ]}>\n          {name}\n        </Text>\n      </View>\n    </Button>;\n  },\n\n  measureTab(page, event) {\n    const { x, width, height, } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = {left: x, right: x + width, width, height, };\n    this.updateView({value: this.props.scrollValue.__getValue(), });\n  },\n\n  render() {\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: 'navy',\n      bottom: 0,\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline,\n    };\n\n    return <View\n      style={[styles.container, {backgroundColor: this.props.backgroundColor, }, this.props.style, ]}\n      onLayout={this.onContainerLayout}\n    >\n      <ScrollView\n        ref={(scrollView) => { this._scrollView = scrollView; }}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        directionalLockEnabled={true}\n        bounces={false}\n        scrollsToTop={false}\n      >\n        <View\n          style={[styles.tabs, {width: this.state._containerWidth, }, this.props.tabsContainerStyle, ]}\n          ref={'tabContainer'}\n          onLayout={this.onTabContainerLayout}\n        >\n          {this.props.tabs.map((name, page) => {\n            const isTabActive = this.props.activeTab === page;\n            const renderTab = this.props.renderTab || this.renderTab;\n            return renderTab(name, page, isTabActive, this.props.goToPage, this.measureTab.bind(this, page));\n          })}\n          <Animated.View style={[tabUnderlineStyle, dynamicTabUnderline, this.props.underlineStyle, ]} />\n        </View>\n      </ScrollView>\n    </View>;\n  },\n\n  componentDidUpdate(prevProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (JSON.stringify(prevProps.tabs) !== JSON.stringify(this.props.tabs) && this.state._containerWidth) {\n      this.setState({ _containerWidth: null, });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width, });\n    this.updateView({value: this.props.scrollValue.__getValue(), });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({value: this.props.scrollValue.__getValue(), });\n  },\n});\n\nmodule.exports = ScrollableTabBar;\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20,\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc',\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}